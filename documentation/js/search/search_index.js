var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.296,1,2.253]],["body/controllers/AppController.html",[0,2.107,1,3.662,2,1.69,3,0.269,4,0.229,5,0.229,6,3.719,7,0.858,8,2.258,9,5.288,10,1.579,11,0.026,12,0.988,13,4.398,14,1.811,15,1.319,16,0.723,17,1.21,18,3.326,19,3.719,20,0.269,21,0.125,22,2.937,23,2.448,24,1.69,25,4.398,26,0.02,27,0.02]],["title/modules/AppModule.html",[28,1.389,29,2.253]],["body/modules/AppModule.html",[1,3.054,2,1.482,3,0.16,4,0.137,5,0.137,11,0.026,16,0.827,17,0.722,18,3.127,19,2.218,20,0.16,21,0.075,24,1.482,26,0.014,27,0.014,28,1.588,29,4.314,30,1.248,31,1.834,32,2.218,33,2.218,34,2.218,35,3.411,36,3.411,37,3.411,38,3.411,39,2.147,40,1.46,41,1.46,42,1.951,43,2.342,44,2.342,45,3.856,46,2.623,47,1.752,48,1.248,49,2.623,50,2.623,51,2.623,52,1.385,53,1.385,54,1.295,55,1.385,56,1.588,57,1.588,58,1.385,59,2.623,60,2.623,61,2.623,62,2.218,63,3.856,64,2.218,65,2.623,66,2.623,67,0.631,68,2.623,69,2.623,70,2.623,71,3.402,72,1.16,73,2.623,74,1.08,75,2.623,76,2.623,77,2.623,78,2.623,79,2.623,80,2.623,81,2.623,82,2.623,83,3.261,84,3.856,85,2.623,86,3.856,87,2.623,88,3.856,89,2.623,90,3.856,91,2.623,92,2.623,93,2.623,94,2.623,95,2.623,96,2.623,97,2.623]],["title/injectables/AppService.html",[18,1.878,98,1.296]],["body/injectables/AppService.html",[3,0.281,4,0.24,5,0.24,7,0.899,8,2.323,9,5.375,11,0.025,12,1.035,14,1.897,15,1.357,16,0.608,17,1.267,18,3.141,20,0.281,21,0.131,24,1.77,26,0.021,27,0.021,98,2.168,99,2.565,100,3.895,101,4.607,102,4.607,103,4.607]],["title/entities/Country.html",[52,1.211,104,0.992]],["body/entities/Country.html",[3,0.142,4,0.121,5,0.121,7,0.454,10,1.528,11,0.026,12,0.956,15,1.443,16,0.307,20,0.341,21,0.159,26,0.013,27,0.013,52,1.929,53,1.833,54,1.595,55,2.113,56,2.212,57,2.102,58,1.705,67,1.024,72,1.028,74,0.958,104,1.69,105,1.106,106,1.266,107,3.298,108,2.186,109,1.753,110,1.404,111,1.73,112,2.621,113,2.621,114,2.326,115,2.121,116,3.022,117,2.326,118,3.321,119,2.326,120,2.186,121,1.81,122,2.621,123,2.621,124,0.894,125,1.106,126,1.106,127,1.106,128,1.194,129,0.958,130,1.106,131,1.106,132,1.194,133,1.194,134,1.028,135,1.028,136,1.106,137,1.106,138,1.194,139,1.194,140,1.81,141,1.194,142,1.558,143,1.194,144,1.194,145,1.194,146,1.194,147,1.194,148,1.194]],["title/classes/CreateHealthDto.html",[21,0.096,149,2.049]],["body/classes/CreateHealthDto.html",[3,0.314,4,0.268,5,0.268,11,0.024,20,0.314,21,0.147,26,0.022,27,0.022,149,3.658,150,1.845,151,4.346,152,3.823]],["title/classes/CreateProjectDto.html",[21,0.096,153,1.878]],["body/classes/CreateProjectDto.html",[3,0.314,4,0.268,5,0.268,11,0.024,20,0.314,21,0.147,26,0.022,27,0.022,150,1.845,153,3.354,154,4.346,155,3.823]],["title/classes/CreateReportDto.html",[21,0.096,156,1.878]],["body/classes/CreateReportDto.html",[3,0.314,4,0.268,5,0.268,11,0.024,20,0.314,21,0.147,26,0.022,27,0.022,150,1.845,156,3.354,157,4.346,158,3.823]],["title/classes/CreateTagDto.html",[21,0.096,159,1.878]],["body/classes/CreateTagDto.html",[3,0.314,4,0.268,5,0.268,11,0.024,20,0.314,21,0.147,26,0.022,27,0.022,150,1.845,159,3.354,160,4.346,161,3.823]],["title/classes/Health.html",[21,0.096,162,2.049]],["body/classes/Health.html",[3,0.315,4,0.269,5,0.269,11,0.024,20,0.315,21,0.147,26,0.022,27,0.022,150,1.854,162,3.669,163,4.367]],["title/controllers/HealthController.html",[0,1.296,164,2.253]],["body/controllers/HealthController.html",[0,1.617,2,1.617,3,0.257,4,0.22,5,0.22,7,0.821,8,2.195,10,1.511,11,0.026,12,0.945,14,1.732,16,0.703,17,1.157,20,0.257,21,0.12,23,2.342,24,1.617,26,0.02,27,0.02,162,3.238,164,3.561,165,3.557,166,2.81,167,6.155,168,4.207,169,4.207,170,5.332,171,5.332,172,5.332,173,3.129,174,4.207,175,2.342,176,3.561,177,4.207,178,4.207,179,4.207]],["title/modules/HealthModule.html",[28,1.389,35,2.049]],["body/modules/HealthModule.html",[2,2.044,3,0.256,4,0.219,5,0.219,11,0.026,16,0.811,17,1.153,20,0.256,21,0.119,26,0.02,27,0.02,28,2.19,30,1.993,31,2.53,35,3.936,39,2.961,40,2.333,41,2.333,43,3.23,44,2.544,164,3.902,173,3.117,180,3.543,181,3.543,182,3.936,183,4.19,184,4.19,185,4.19,186,5.318]],["title/injectables/HealthService.html",[98,1.296,182,2.049]],["body/injectables/HealthService.html",[3,0.186,4,0.159,5,0.159,7,0.595,8,1.77,11,0.026,12,1.28,14,2.502,15,1.371,16,0.657,17,0.839,20,0.186,21,0.087,24,2.19,26,0.016,27,0.016,67,1.3,98,1.652,99,1.699,109,1.858,110,1.487,115,2.118,149,3.461,162,3.461,182,2.611,187,2.58,188,1.652,189,2.776,190,2.208,191,2.208,192,2.208,193,4.3,194,3.051,195,2.389,196,2.389,197,3.051,198,2.208,199,3.051,200,2.208,201,3.051,202,2.208,203,4.058,204,3.051,205,1.567,206,3.636,207,1.567,208,3.806,209,2.038,210,1.853,211,2.038,212,3.051]],["title/entities/Investment.html",[53,1.211,104,0.992]],["body/entities/Investment.html",[3,0.142,4,0.121,5,0.121,7,0.454,10,1.528,11,0.026,12,0.956,15,1.443,16,0.307,20,0.341,21,0.159,26,0.013,27,0.013,52,1.833,53,1.929,54,1.595,55,2.113,56,2.102,57,2.212,58,1.705,67,1.024,72,1.028,74,0.958,104,1.69,105,1.106,106,1.266,107,3.298,108,1.194,109,1.753,110,1.404,111,1.73,112,2.621,113,2.621,115,2.121,116,3.022,118,3.321,120,2.186,121,1.81,122,2.621,123,2.621,124,0.894,125,1.106,126,1.106,127,1.106,128,1.194,129,0.958,130,1.106,131,1.106,132,1.194,133,1.194,134,1.028,135,1.028,136,1.106,137,1.106,138,2.186,139,1.194,140,1.81,141,1.194,142,1.558,143,1.194,144,1.194,145,1.194,146,1.194,147,1.194,148,1.194,213,2.326,214,2.326,215,2.326]],["title/classes/KeyValuePair.html",[21,0.096,216,2.049]],["body/classes/KeyValuePair.html",[3,0.224,4,0.192,5,0.192,7,0.716,11,0.026,12,1.232,15,1.535,20,0.298,21,0.139,26,0.018,27,0.018,67,1.319,106,1.752,110,1.721,115,2.043,135,2.423,142,2.821,150,1.318,175,2.717,195,1.623,196,1.623,216,3.798,217,4.346,218,2.731,219,4.127,220,4.88,221,3.671,222,2.229,223,4.078,224,4.078,225,3.104,226,3.104,227,3.104,228,3.104,229,3.104]],["title/entities/Project.html",[54,1.133,104,0.992]],["body/entities/Project.html",[3,0.134,4,0.114,5,0.114,7,0.428,10,1.884,11,0.026,12,1.179,15,1.486,16,0.289,20,0.334,21,0.156,26,0.012,27,0.012,52,1.785,53,1.785,54,1.669,55,2.078,56,2.047,57,2.047,58,1.884,67,1.262,72,0.969,74,0.903,104,1.659,105,1.043,106,1.21,107,3.206,108,1.125,109,1.717,110,1.368,112,2.365,113,2.365,115,2.096,116,2.971,118,3.349,120,2.107,121,1.73,122,2.552,123,2.552,124,0.842,125,1.952,126,1.952,127,1.952,128,1.73,129,1.69,130,1.043,131,1.043,132,1.125,133,1.125,134,0.969,135,0.969,136,1.043,137,1.043,138,1.125,139,1.125,140,1.73,141,1.125,142,1.489,143,1.125,144,1.125,145,1.125,146,1.125,147,1.125,148,1.125,230,2.192,231,2.192,232,2.192,233,2.192,234,2.192,235,1.853,236,2.192]],["title/controllers/ProjectsController.html",[0,1.296,237,2.253]],["body/controllers/ProjectsController.html",[0,1.103,2,1.103,3,0.175,4,0.15,5,0.15,7,0.56,8,1.695,10,1.999,11,0.026,12,1.251,14,2.293,15,1.496,16,0.694,17,0.79,20,0.175,21,0.082,22,1.917,23,1.598,24,2.14,26,0.015,27,0.015,67,1.265,109,1.821,110,1.447,134,1.269,153,3.226,166,1.917,188,1.582,189,2.7,190,2.114,191,2.114,192,2.114,195,2.325,196,2.325,198,1.474,200,1.474,202,1.474,205,1.474,207,1.474,237,2.75,238,2.427,239,2.427,240,3.581,241,2.87,242,2.87,243,3.063,244,2.87,245,3.063,246,2.87,247,3.708,248,3.063,249,2.87,250,3.063,251,2.135,252,2.135,253,2.135,254,2.68,255,2.427,256,3.063,257,2.87,258,2.135,259,2.87,260,2.87,261,2.135,262,2.87,263,2.135,264,2.87,265,2.135,266,2.87]],["title/modules/ProjectsModule.html",[28,1.389,36,2.049]],["body/modules/ProjectsModule.html",[2,2.019,3,0.251,4,0.214,5,0.214,11,0.026,16,0.832,17,1.131,20,0.251,21,0.117,26,0.019,27,0.019,28,2.163,30,1.955,31,2.499,36,3.916,39,2.925,40,2.288,41,2.288,43,3.19,44,2.495,47,2.745,48,1.955,54,1.38,237,3.867,254,3.591,255,3.475,267,3.475,268,3.475,269,4.109,270,4.109,271,2.288,272,4.109]],["title/injectables/ProjectsService.html",[98,1.296,254,1.878]],["body/injectables/ProjectsService.html",[3,0.12,4,0.103,5,0.103,7,0.384,8,1.275,11,0.026,12,1.127,14,1.945,15,0.745,16,0.662,17,0.541,20,0.12,21,0.056,24,1.669,26,0.011,27,0.011,48,0.935,54,1.458,67,1.136,74,0.809,98,1.189,99,1.094,109,1.759,110,1.54,115,1.88,124,0.755,125,2.066,126,2.066,127,2.066,129,1.945,134,0.869,153,2.63,175,1.723,176,1.313,188,1.189,189,2.23,190,1.589,191,1.589,192,1.589,195,2.088,196,2.088,198,1.589,200,1.589,202,1.589,205,1.009,207,1.009,208,2.067,209,1.313,210,1.194,211,1.313,239,2.617,247,3.188,254,1.723,256,2.302,271,1.094,273,1.662,274,4.163,275,1.966,276,2.901,277,1.966,278,3.095,279,1.966,280,1.966,281,3.732,282,1.966,283,1.966,284,1.966,285,1.462,286,1.966,287,2.848,288,1.966,289,1.966,290,1.662,291,1.966,292,1.662,293,3.237,294,1.966,295,3.829,296,1.966,297,2.617,298,3.095,299,1.966,300,1.966,301,1.966,302,3.095,303,1.966,304,1.966,305,2.617,306,3.237,307,4.724,308,3.095,309,3.829,310,4.343,311,1.966,312,1.966,313,3.095,314,1.966,315,1.966,316,1.966,317,1.966,318,1.966,319,3.095,320,1.662,321,1.966,322,1.966,323,1.966,324,1.966,325,1.966,326,1.966,327,1.966,328,1.662,329,2.617,330,1.966,331,1.966,332,1.966,333,1.966,334,1.662,335,1.966]],["title/entities/Report.html",[55,1.211,104,0.992]],["body/entities/Report.html",[3,0.139,4,0.119,5,0.119,7,0.443,10,1.685,11,0.026,12,1.054,15,1.435,16,0.3,20,0.338,21,0.158,26,0.013,27,0.013,52,1.814,53,1.814,54,1.576,55,2.141,56,2.192,57,2.192,58,1.685,67,1.129,72,1.004,74,0.935,104,1.678,105,1.08,106,1.243,107,3.229,108,1.166,109,1.739,110,1.154,111,2.575,112,2.733,113,2.733,115,2.111,116,3.002,118,3.308,120,2.154,121,1.778,122,2.594,123,2.594,124,0.873,125,1.08,126,1.08,127,1.08,128,1.166,129,0.935,130,1.08,131,1.08,132,1.166,133,1.166,134,1.004,135,1.854,136,1.995,137,1.995,138,1.166,139,1.166,140,1.778,141,1.166,142,1.53,143,1.166,144,1.166,145,1.166,146,1.166,147,1.166,148,1.166,336,2.271,337,2.271,338,2.271,339,2.271]],["title/classes/ReportDto.html",[21,0.096,222,2.049]],["body/classes/ReportDto.html",[3,0.215,4,0.184,5,0.184,7,0.688,11,0.026,12,1.291,15,1.52,20,0.29,21,0.135,26,0.018,27,0.018,67,1.383,106,1.705,110,1.478,115,1.595,135,2.732,142,2.374,150,1.266,175,2.644,195,1.558,196,1.558,216,4.029,217,4.463,218,2.622,219,2.981,222,2.884,223,4.699,224,4.699,225,2.981,226,2.981,227,2.981,228,2.981,229,2.981,340,3.525,341,4.75,342,3.525,343,3.525]],["title/entities/ReportToCountry.html",[56,1.389,104,0.992]],["body/entities/ReportToCountry.html",[3,0.13,4,0.111,5,0.111,7,0.415,10,1.862,11,0.026,12,1.165,15,1.379,16,0.281,20,0.33,21,0.154,26,0.012,27,0.012,52,2.059,53,1.76,54,1.522,55,2.203,56,2.135,57,2.019,58,1.627,67,1.247,72,0.94,74,0.876,104,1.643,105,1.011,106,1.182,107,3.419,108,1.092,109,1.54,110,1.108,112,2.327,113,2.327,115,2.139,116,2.944,118,3.314,120,2.067,121,1.69,122,2.517,123,2.517,124,0.817,125,1.011,126,1.011,127,1.011,128,1.092,129,0.876,130,1.011,131,1.011,132,1.092,133,1.092,134,0.94,135,0.94,136,1.011,137,1.011,138,1.092,139,1.092,140,2.327,141,1.092,142,2.003,143,1.092,144,1.092,145,2.067,146,2.067,147,1.69,148,1.69,344,2.783,345,2.126,346,2.126,347,2.126,348,2.126,349,2.126,350,2.126]],["title/entities/ReportToInvestment.html",[57,1.389,104,0.992]],["body/entities/ReportToInvestment.html",[3,0.13,4,0.111,5,0.111,7,0.415,10,1.862,11,0.026,12,1.165,15,1.379,16,0.281,20,0.33,21,0.154,26,0.012,27,0.012,52,1.76,53,2.059,54,1.522,55,2.203,56,2.019,57,2.135,58,1.627,67,1.247,72,0.94,74,0.876,104,1.643,105,1.011,106,1.182,107,3.419,108,1.092,109,1.54,110,1.108,112,2.327,113,2.327,115,2.139,116,2.944,118,3.314,120,2.067,121,1.69,122,2.517,123,2.517,124,0.817,125,1.011,126,1.011,127,1.011,128,1.092,129,0.876,130,1.011,131,1.011,132,1.092,133,1.092,134,0.94,135,0.94,136,1.011,137,1.011,138,1.092,139,2.067,140,2.327,141,2.067,142,2.003,143,1.69,144,1.69,145,1.092,146,1.092,147,1.092,148,1.092,344,2.783,351,2.126,352,2.126,353,2.126,354,2.126,355,2.126,356,2.126]],["title/controllers/ReportsController.html",[0,1.296,357,2.253]],["body/controllers/ReportsController.html",[0,1.103,2,1.103,3,0.175,4,0.15,5,0.15,7,0.56,8,1.695,10,1.999,11,0.026,12,1.251,14,2.293,15,1.496,16,0.694,17,0.79,20,0.175,21,0.082,22,1.917,23,1.598,24,2.14,26,0.015,27,0.015,67,1.265,109,1.821,110,1.447,156,3.226,166,1.917,188,1.582,189,2.7,190,2.114,191,2.114,192,2.114,195,2.325,196,2.325,198,1.474,200,1.474,202,1.474,205,1.474,207,1.474,240,3.581,243,3.063,245,3.063,248,3.063,250,3.063,251,2.135,252,2.135,253,2.135,258,2.135,261,2.135,263,2.135,265,2.135,357,2.75,358,2.427,359,2.427,360,2.427,361,2.87,362,2.87,363,2.87,364,2.87,365,3.708,366,2.87,367,2.68,368,2.427,369,3.063,370,2.87,371,2.87,372,2.87,373,2.87,374,2.87,375,2.87]],["title/modules/ReportsModule.html",[28,1.389,37,2.049]],["body/modules/ReportsModule.html",[2,1.989,3,0.245,4,0.21,5,0.21,11,0.026,16,0.826,17,1.105,20,0.245,21,0.115,26,0.019,27,0.019,28,2.132,30,1.91,31,2.462,37,3.893,39,2.882,40,2.236,41,2.236,43,3.143,44,2.439,47,2.683,48,1.91,52,1.442,53,1.442,55,1.442,271,2.236,357,3.826,367,3.569,368,3.396,376,3.396,377,3.396,378,4.017,379,4.017,380,4.017,381,4.017,382,4.017]],["title/injectables/ReportsService.html",[98,1.296,367,1.878]],["body/injectables/ReportsService.html",[3,0.133,4,0.114,5,0.114,7,0.426,8,1.383,11,0.026,12,1.177,14,2.043,15,0.808,16,0.72,17,0.601,20,0.133,21,0.062,24,1.907,26,0.012,27,0.012,48,1.038,52,0.784,53,0.784,55,1.47,67,1.194,74,1.383,98,1.291,99,1.215,109,1.559,110,1.502,115,1.941,124,0.839,136,1.038,137,1.038,156,2.762,175,1.87,176,2.734,188,1.291,189,2.36,190,1.724,191,1.724,192,1.724,195,2.193,196,2.193,198,1.724,200,1.724,202,1.724,205,1.121,207,1.121,208,2.243,209,1.458,210,2.039,211,1.458,216,2.486,222,1.326,223,2.498,224,2.498,271,1.215,274,4.299,276,3.941,281,3.898,285,1.624,287,3.691,290,1.846,359,1.846,360,2.84,365,3.314,367,1.87,369,2.498,383,1.846,384,2.183,385,4.093,386,4.093,387,2.183,388,3.358,389,2.183,390,2.183,391,2.183,392,2.183,393,2.183,394,2.183,395,2.183,396,2.183,397,2.183,398,2.183,399,5.458,400,2.183,401,2.183,402,2.183,403,2.183,404,2.183,405,2.183,406,2.183,407,2.183,408,2.183,409,2.183,410,2.183,411,3.358,412,3.358,413,2.183,414,2.183,415,2.183,416,2.183,417,2.183,418,2.183,419,2.183,420,2.183]],["title/entities/Tag.html",[58,1.211,104,0.992]],["body/entities/Tag.html",[3,0.139,4,0.119,5,0.119,7,0.444,10,1.687,11,0.026,12,1.055,15,1.459,16,0.3,20,0.338,21,0.158,26,0.013,27,0.013,52,1.815,53,1.815,54,1.789,55,2.1,56,2.082,57,2.082,58,1.815,67,1.13,72,1.006,74,0.937,104,1.679,105,1.083,106,1.245,107,3.23,108,1.169,109,1.74,110,1.156,112,2.412,113,2.412,115,2.112,116,3.004,118,3.33,120,2.157,121,1.781,122,2.596,123,2.596,124,0.875,125,1.083,126,1.083,127,1.083,128,1.169,129,0.937,130,1.998,131,1.998,132,1.781,133,1.781,134,1.857,135,1.006,136,1.083,137,1.083,138,1.169,139,1.169,140,1.781,141,1.169,142,1.533,143,1.169,144,1.169,145,1.169,146,1.169,147,1.169,148,1.169,235,1.925,421,2.276,422,2.276,423,2.276,424,2.276,425,2.276]],["title/controllers/TagsController.html",[0,1.296,426,2.253]],["body/controllers/TagsController.html",[0,1.103,2,1.103,3,0.175,4,0.15,5,0.15,7,0.56,8,1.695,10,1.999,11,0.026,12,1.251,14,2.293,15,1.496,16,0.694,17,0.79,20,0.175,21,0.082,22,1.917,23,1.598,24,2.14,26,0.015,27,0.015,67,1.265,109,1.821,110,1.447,129,1.182,159,3.226,166,1.917,188,1.582,189,2.7,190,2.114,191,2.114,192,2.114,195,2.325,196,2.325,198,1.474,200,1.474,202,1.474,205,1.474,207,1.474,240,3.581,243,3.063,245,3.063,248,3.063,250,3.063,251,2.135,252,2.135,253,2.135,258,2.135,261,2.135,263,2.135,265,2.135,426,2.75,427,2.427,428,2.427,429,2.87,430,2.87,431,2.87,432,2.87,433,3.708,434,2.87,435,2.68,436,2.427,437,3.063,438,2.87,439,2.87,440,2.87,441,2.87,442,2.87,443,2.87]],["title/modules/TagsModule.html",[28,1.389,38,2.049]],["body/modules/TagsModule.html",[2,2.019,3,0.251,4,0.214,5,0.214,11,0.026,16,0.832,17,1.131,20,0.251,21,0.117,26,0.019,27,0.019,28,2.163,30,1.955,31,2.499,38,3.916,39,2.925,40,2.288,41,2.288,43,3.19,44,2.495,47,2.745,48,1.955,58,1.476,271,2.288,426,3.867,435,3.591,436,3.475,444,3.475,445,3.475,446,4.109,447,4.109,448,4.109]],["title/injectables/TagsService.html",[98,1.296,435,1.878]],["body/injectables/TagsService.html",[3,0.129,4,0.11,5,0.11,7,0.412,8,1.349,11,0.026,12,1.212,14,2.013,15,0.788,16,0.682,17,0.582,20,0.129,21,0.06,23,2.233,24,1.736,26,0.012,27,0.012,48,1.005,58,1.857,67,1.244,98,1.259,99,1.177,106,1.176,109,1.838,110,1.345,115,1.922,124,0.812,129,1.86,130,2.325,131,2.325,159,2.722,175,1.824,176,1.412,188,1.259,189,2.32,190,1.682,191,1.682,192,1.682,195,2.161,196,2.161,198,1.682,200,1.682,202,1.682,205,1.085,207,1.085,208,2.188,209,1.412,210,1.283,211,1.412,271,1.177,274,4.258,276,3.018,281,3.847,285,1.572,287,2.984,292,1.787,293,1.787,297,1.787,305,1.787,306,1.787,320,1.787,328,1.787,329,1.787,428,2.77,433,3.276,435,1.824,437,2.437,449,1.787,450,2.114,451,3.276,452,3.276,453,2.114,454,2.114,455,2.114,456,2.114,457,2.114,458,2.114,459,2.114,460,2.114,461,2.114,462,2.114,463,2.114,464,2.114,465,2.114,466,3.276,467,3.276,468,2.114,469,2.114,470,2.114,471,2.114,472,2.114,473,2.114,474,2.114,475,2.114,476,2.114,477,2.114,478,2.114,479,2.114,480,2.114,481,2.114,482,2.114,483,2.114,484,2.114,485,1.787,486,2.114,487,2.114,488,2.114,489,2.114,490,2.114,491,2.114,492,2.114,493,2.114,494,2.114,495,2.114]],["title/classes/UpdateHealthDto.html",[21,0.096,203,2.253]],["body/classes/UpdateHealthDto.html",[3,0.295,4,0.252,5,0.252,11,0.025,16,0.767,20,0.295,21,0.138,26,0.022,27,0.022,149,2.937,150,1.737,152,3.598,188,1.859,203,3.881,206,4.09,496,4.09,497,3.23,498,3.23,499,3.23,500,4.836]],["title/classes/UpdateProjectDto.html",[21,0.096,247,2.049]],["body/classes/UpdateProjectDto.html",[3,0.294,4,0.251,5,0.251,11,0.025,16,0.765,20,0.294,21,0.137,26,0.021,27,0.021,150,1.729,153,2.681,155,3.581,188,1.85,247,3.519,256,3.581,497,3.216,499,3.216,501,4.071,502,4.071,503,4.071,504,4.815]],["title/classes/UpdateReportDto.html",[21,0.096,365,2.049]],["body/classes/UpdateReportDto.html",[3,0.295,4,0.252,5,0.252,11,0.025,16,0.767,20,0.295,21,0.138,26,0.022,27,0.022,150,1.737,156,2.693,158,3.598,188,1.859,365,3.529,369,3.598,497,3.23,498,3.23,499,3.23,505,4.09,506,4.836]],["title/classes/UpdateTagDto.html",[21,0.096,433,2.049]],["body/classes/UpdateTagDto.html",[3,0.295,4,0.252,5,0.252,11,0.025,16,0.767,20,0.295,21,0.138,26,0.022,27,0.022,150,1.737,159,2.693,161,3.598,188,1.859,433,3.529,437,3.598,497,3.23,498,3.23,499,3.23,507,4.09,508,4.836]],["title/coverage.html",[509,3.43]],["body/coverage.html",[0,2.075,1,1.774,5,0.139,6,2.246,11,0.026,18,1.479,21,0.181,26,0.014,27,0.014,42,1.976,52,0.954,53,0.954,54,0.892,55,1.397,56,1.094,57,1.094,58,0.954,67,0.639,71,1.976,83,3.291,98,2.075,100,2.246,104,1.714,105,2.772,149,1.613,151,2.246,152,2.895,153,1.479,154,2.246,155,2.895,156,1.479,157,2.246,158,2.895,159,1.479,160,2.246,161,2.895,162,1.613,163,2.246,164,1.774,165,2.246,182,1.613,187,2.246,203,1.774,210,1.613,216,1.613,217,2.895,218,2.895,222,1.613,237,1.774,238,2.246,247,1.613,254,1.479,273,2.246,357,1.774,358,2.246,365,1.613,367,1.479,383,2.246,426,1.774,427,2.246,433,1.613,435,1.479,449,2.246,496,2.246,501,2.246,505,2.246,507,2.246,509,1.976,510,2.656,511,2.656,512,2.656,513,6.891,514,6.667,515,4.606,516,5.071,517,2.246,518,2.246,519,3.892,520,2.656,521,2.656,522,2.656,523,2.656,524,2.656,525,2.656]],["title/dependencies.html",[31,1.931,526,2.38]],["body/dependencies.html",[11,0.026,17,1.153,26,0.02,27,0.02,31,1.993,48,1.993,62,3.543,64,3.543,124,1.61,173,3.117,498,2.799,502,3.543,503,3.543,527,5.843,528,4.19,529,5.318,530,4.19,531,4.19,532,4.19,533,4.19,534,4.19,535,4.19,536,4.19,537,4.19,538,4.19,539,4.19,540,4.19,541,4.19,542,4.19,543,4.19,544,4.19,545,4.19,546,4.19,547,4.19,548,4.19,549,4.19,550,4.19,551,4.19,552,4.19,553,4.19]],["title/miscellaneous/functions.html",[554,2.38,555,3.433]],["body/miscellaneous/functions.html",[7,0.993,11,0.022,26,0.022,27,0.022,42,3.787,71,4.736,517,4.304,518,5.383,554,4.304,555,4.304,556,5.09,557,5.09]],["title/index.html",[7,0.549,558,2.815,559,2.815]],["body/index.html",[4,0.193,11,0.025,26,0.018,27,0.018,54,1.241,276,2.469,334,3.126,509,2.75,560,3.696,561,3.696,562,4.903,563,3.696,564,3.696,565,3.696,566,3.696,567,3.696,568,3.696,569,3.126,570,5.501,571,3.696,572,3.696,573,3.696,574,6.393,575,3.696,576,3.696,577,6.266,578,3.696,579,3.696,580,4.903,581,3.696,582,3.696,583,3.696,584,3.696,585,4.903,586,4.903,587,3.696,588,3.696,589,3.696,590,4.903,591,4.903,592,3.696,593,3.696,594,3.696,595,3.696,596,3.126,597,3.696,598,3.696,599,3.696,600,3.696,601,3.696,602,3.696,603,3.696,604,3.696,605,3.696,606,3.696,607,3.126,608,3.696,609,3.696,610,3.696,611,3.696,612,3.696,613,3.696,614,3.126]],["title/modules.html",[30,2.193]],["body/modules.html",[11,0.021,26,0.021,27,0.021,29,3.201,30,2.28,35,2.911,36,2.911,37,2.911,38,2.911,596,5.576,615,6.594,616,6.594,617,6.594]],["title/overview.html",[618,3.898]],["body/overview.html",[2,1.461,11,0.025,18,3.105,26,0.019,27,0.019,29,4.517,30,1.808,31,2.376,32,3.215,33,3.215,34,3.215,35,3.736,36,3.736,37,3.736,38,3.736,39,2.781,40,2.117,41,2.117,72,1.68,99,2.117,150,1.365,180,3.215,181,3.215,182,3.387,254,3.105,267,3.215,268,3.215,367,3.105,376,3.215,377,3.215,435,3.105,444,3.215,445,3.215,485,4.717,618,3.215,619,3.802,620,3.802]],["title/properties.html",[106,1.458,526,2.38]],["body/properties.html",[11,0.025,26,0.022,27,0.022,106,1.845,569,4.346,607,4.346,614,4.346,621,5.14,622,5.14,623,5.14]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Country.html":{},"classes/CreateHealthDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateReportDto.html":{},"classes/CreateTagDto.html":{},"classes/Health.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"entities/Investment.html":{},"classes/KeyValuePair.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"classes/ReportDto.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateReportDto.html":{},"classes/UpdateTagDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":622,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["0.3.6",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":293,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/TagsService.html":{}}}],["1.7.4",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["1.rds.amazonaws.com",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["10",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["12",{"_index":620,"title":{},"body":{"overview.html":{}}}],["2",{"_index":305,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/TagsService.html":{}}}],["2.0.1",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["2.3.3",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":306,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/TagsService.html":{}}}],["3.0.2",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["4",{"_index":328,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/TagsService.html":{}}}],["4.0.1",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":485,"title":{},"body":{"injectables/TagsService.html":{},"overview.html":{}}}],["5.1.0",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["7",{"_index":619,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["8.0.8",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["8.1.2",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["_shared/entities",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["action",{"_index":208,"title":{},"body":{"injectables/HealthService.html":{},"injectables/ProjectsService.html":{},"injectables/ReportsService.html":{},"injectables/TagsService.html":{}}}],["adds",{"_index":209,"title":{},"body":{"injectables/HealthService.html":{},"injectables/ProjectsService.html":{},"injectables/ReportsService.html":{},"injectables/TagsService.html":{}}}],["agroforestry",{"_index":302,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["allcountries",{"_index":401,"title":{},"body":{"injectables/ReportsService.html":{}}}],["allcountries.find((c",{"_index":414,"title":{},"body":{"injectables/ReportsService.html":{}}}],["allinvestments",{"_index":403,"title":{},"body":{"injectables/ReportsService.html":{}}}],["allinvestments.find((i",{"_index":407,"title":{},"body":{"injectables/ReportsService.html":{}}}],["amazing",{"_index":597,"title":{},"body":{"index.html":{}}}],["app",{"_index":576,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_interceptor",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":568,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":274,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/ReportsService.html":{},"injectables/TagsService.html":{}}}],["author",{"_index":607,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":287,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/ReportsService.html":{},"injectables/TagsService.html":{}}}],["backers",{"_index":598,"title":{},"body":{"index.html":{}}}],["bamenda",{"_index":479,"title":{},"body":{"injectables/TagsService.html":{}}}],["bannerman’s",{"_index":477,"title":{},"body":{"injectables/TagsService.html":{}}}],["better",{"_index":323,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["biodiversity",{"_index":321,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["bmg6kkfdmf4wgnwe",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["body",{"_index":250,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/ReportsController.html":{},"controllers/TagsController.html":{}}}],["bootstrap",{"_index":518,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":617,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":615,"title":{},"body":{"modules.html":{}}}],["building",{"_index":563,"title":{},"body":{"index.html":{}}}],["bush",{"_index":490,"title":{},"body":{"injectables/TagsService.html":{}}}],["c.id",{"_index":415,"title":{},"body":{"injectables/ReportsService.html":{}}}],["cache",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["cacheinterceptor",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["cachemodule.register",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["cameroon",{"_index":320,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/TagsService.html":{}}}],["cascade",{"_index":133,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["challenges",{"_index":469,"title":{},"body":{"injectables/TagsService.html":{}}}],["check",{"_index":167,"title":{},"body":{"controllers/HealthController.html":{}}}],["chimpanzees",{"_index":484,"title":{},"body":{"injectables/TagsService.html":{}}}],["class",{"_index":21,"title":{"classes/CreateHealthDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateReportDto.html":{},"classes/CreateTagDto.html":{},"classes/Health.html":{},"classes/KeyValuePair.html":{},"classes/ReportDto.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateReportDto.html":{},"classes/UpdateTagDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Country.html":{},"classes/CreateHealthDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateReportDto.html":{},"classes/CreateTagDto.html":{},"classes/Health.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"entities/Investment.html":{},"classes/KeyValuePair.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"classes/ReportDto.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateReportDto.html":{},"classes/UpdateTagDto.html":{},"coverage.html":{}}}],["classes",{"_index":150,"title":{},"body":{"classes/CreateHealthDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateReportDto.html":{},"classes/CreateTagDto.html":{},"classes/Health.html":{},"classes/KeyValuePair.html":{},"classes/ReportDto.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateReportDto.html":{},"classes/UpdateTagDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_healthmodule",{"_index":180,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_healthmodule_providers",{"_index":181,"title":{},"body":{"modules/HealthModule.html":{},"overview.html":{}}}],["cluster_projectsmodule",{"_index":267,"title":{},"body":{"modules/ProjectsModule.html":{},"overview.html":{}}}],["cluster_projectsmodule_providers",{"_index":268,"title":{},"body":{"modules/ProjectsModule.html":{},"overview.html":{}}}],["cluster_reportsmodule",{"_index":376,"title":{},"body":{"modules/ReportsModule.html":{},"overview.html":{}}}],["cluster_reportsmodule_providers",{"_index":377,"title":{},"body":{"modules/ReportsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule",{"_index":444,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["cluster_tagsmodule_providers",{"_index":445,"title":{},"body":{"modules/TagsModule.html":{},"overview.html":{}}}],["column",{"_index":118,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["communities",{"_index":326,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["competetitive",{"_index":472,"title":{},"body":{"injectables/TagsService.html":{}}}],["compression",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["const",{"_index":292,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/TagsService.html":{}}}],["constructor",{"_index":175,"title":{},"body":{"controllers/HealthController.html":{},"classes/KeyValuePair.html":{},"injectables/ProjectsService.html":{},"classes/ReportDto.html":{},"injectables/ReportsService.html":{},"injectables/TagsService.html":{}}}],["constructor(month",{"_index":340,"title":{},"body":{"classes/ReportDto.html":{}}}],["constructor(name",{"_index":219,"title":{},"body":{"classes/KeyValuePair.html":{},"classes/ReportDto.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/ProjectsController.html":{},"controllers/ReportsController.html":{},"controllers/TagsController.html":{}}}],["constructor(projectsrepository",{"_index":275,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["constructor(reportsrepository",{"_index":384,"title":{},"body":{"injectables/ReportsService.html":{}}}],["constructor(tagsrepository",{"_index":450,"title":{},"body":{"injectables/TagsService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/ProjectsController.html":{},"controllers/ReportsController.html":{},"controllers/TagsController.html":{}},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/ProjectsController.html":{},"controllers/ReportsController.html":{},"controllers/TagsController.html":{},"coverage.html":{}}}],["controller('health",{"_index":174,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('projects",{"_index":257,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["controller('reports",{"_index":370,"title":{},"body":{"controllers/ReportsController.html":{}}}],["controller('tags",{"_index":438,"title":{},"body":{"controllers/TagsController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"overview.html":{}}}],["coopers",{"_index":474,"title":{},"body":{"injectables/TagsService.html":{}}}],["countries",{"_index":224,"title":{},"body":{"classes/KeyValuePair.html":{},"classes/ReportDto.html":{},"injectables/ReportsService.html":{}}}],["countries.push(new",{"_index":417,"title":{},"body":{"injectables/ReportsService.html":{}}}],["countriesrepository",{"_index":385,"title":{},"body":{"injectables/ReportsService.html":{}}}],["country",{"_index":52,"title":{"entities/Country.html":{}},"body":{"modules/AppModule.html":{},"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"coverage.html":{}}}],["country.countrytoreport",{"_index":148,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["countryid",{"_index":146,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["countrytoreport",{"_index":108,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["coverage",{"_index":509,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":188,"title":{},"body":{"injectables/HealthService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateReportDto.html":{},"classes/UpdateTagDto.html":{}}}],["create(@body",{"_index":258,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/ReportsController.html":{},"controllers/TagsController.html":{}}}],["create(createhealthdto",{"_index":193,"title":{},"body":{"injectables/HealthService.html":{}}}],["create(createprojectdto",{"_index":239,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["create(createreportdto",{"_index":360,"title":{},"body":{"controllers/ReportsController.html":{},"injectables/ReportsService.html":{}}}],["create(createtagdto",{"_index":428,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["createhealthdto",{"_index":149,"title":{"classes/CreateHealthDto.html":{}},"body":{"classes/CreateHealthDto.html":{},"injectables/HealthService.html":{},"classes/UpdateHealthDto.html":{},"coverage.html":{}}}],["createprojectdto",{"_index":153,"title":{"classes/CreateProjectDto.html":{}},"body":{"classes/CreateProjectDto.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["createreportdto",{"_index":156,"title":{"classes/CreateReportDto.html":{}},"body":{"classes/CreateReportDto.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"classes/UpdateReportDto.html":{},"coverage.html":{}}}],["createtagdto",{"_index":159,"title":{"classes/CreateTagDto.html":{}},"body":{"classes/CreateTagDto.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/UpdateTagDto.html":{},"coverage.html":{}}}],["creating",{"_index":315,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["cross",{"_index":481,"title":{},"body":{"injectables/TagsService.html":{}}}],["database",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["db",{"_index":177,"title":{},"body":{"controllers/HealthController.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"entities/Country.html":{},"controllers/HealthController.html":{},"entities/Investment.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"controllers/ReportsController.html":{},"entities/Tag.html":{},"controllers/TagsController.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Country.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"entities/Investment.html":{},"classes/KeyValuePair.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"classes/ReportDto.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["deforestation",{"_index":489,"title":{},"body":{"injectables/TagsService.html":{}}}],["delete",{"_index":253,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/ReportsController.html":{},"controllers/TagsController.html":{}}}],["delete(':id",{"_index":245,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/ReportsController.html":{},"controllers/TagsController.html":{}}}],["demand",{"_index":471,"title":{},"body":{"injectables/TagsService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/ProjectsModule.html":{},"modules/ReportsModule.html":{},"modules/TagsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":126,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["description",{"_index":569,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":334,"title":{},"body":{"injectables/ProjectsService.html":{},"index.html":{}}}],["documentation",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":395,"title":{},"body":{"injectables/ReportsService.html":{}}}],["dto.ts",{"_index":218,"title":{},"body":{"classes/KeyValuePair.html":{},"classes/ReportDto.html":{},"coverage.html":{}}}],["dto.ts:18",{"_index":221,"title":{},"body":{"classes/KeyValuePair.html":{}}}],["dto.ts:19",{"_index":220,"title":{},"body":{"classes/KeyValuePair.html":{}}}],["dto.ts:2",{"_index":343,"title":{},"body":{"classes/ReportDto.html":{}}}],["dto.ts:3",{"_index":342,"title":{},"body":{"classes/ReportDto.html":{}}}],["dto.ts:4",{"_index":341,"title":{},"body":{"classes/ReportDto.html":{}}}],["dto/create",{"_index":205,"title":{},"body":{"injectables/HealthService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["dto/report",{"_index":394,"title":{},"body":{"injectables/ReportsService.html":{}}}],["dto/update",{"_index":207,"title":{},"body":{"injectables/HealthService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["e2e",{"_index":587,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":564,"title":{},"body":{"index.html":{}}}],["entities",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{},"overview.html":{}}}],["entity",{"_index":104,"title":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{},"coverage.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Country.html":{},"classes/CreateHealthDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateReportDto.html":{},"classes/CreateTagDto.html":{},"classes/Health.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"entities/Investment.html":{},"classes/KeyValuePair.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"classes/ReportDto.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateReportDto.html":{},"classes/UpdateTagDto.html":{}}}],["express",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":499,"title":{},"body":{"classes/UpdateHealthDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateReportDto.html":{},"classes/UpdateTagDto.html":{}}}],["farmers",{"_index":298,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["farming",{"_index":493,"title":{},"body":{"injectables/TagsService.html":{}}}],["farms",{"_index":303,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Country.html":{},"classes/CreateHealthDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateReportDto.html":{},"classes/CreateTagDto.html":{},"classes/Health.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"entities/Investment.html":{},"classes/KeyValuePair.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"classes/ReportDto.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateReportDto.html":{},"classes/UpdateTagDto.html":{},"coverage.html":{}}}],["findall",{"_index":189,"title":{},"body":{"injectables/HealthService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["findone",{"_index":190,"title":{},"body":{"injectables/HealthService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["findone(@param('id",{"_index":261,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/ReportsController.html":{},"controllers/TagsController.html":{}}}],["findone(id",{"_index":198,"title":{},"body":{"injectables/HealthService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["fires",{"_index":491,"title":{},"body":{"injectables/TagsService.html":{}}}],["framework",{"_index":562,"title":{},"body":{"index.html":{}}}],["function",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["functions",{"_index":555,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":243,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/ReportsController.html":{},"controllers/TagsController.html":{}}}],["get()@healthcheck",{"_index":168,"title":{},"body":{"controllers/HealthController.html":{}}}],["getconnection",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":558,"title":{"index.html":{}},"body":{}}],["global",{"_index":470,"title":{},"body":{"injectables/TagsService.html":{}}}],["gorillas",{"_index":483,"title":{},"body":{"injectables/TagsService.html":{}}}],["grow",{"_index":593,"title":{},"body":{"index.html":{}}}],["header_en.png",{"_index":319,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["health",{"_index":162,"title":{"classes/Health.html":{}},"body":{"classes/Health.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"coverage.html":{}}}],["health.controller",{"_index":185,"title":{},"body":{"modules/HealthModule.html":{}}}],["health.dto",{"_index":206,"title":{},"body":{"injectables/HealthService.html":{},"classes/UpdateHealthDto.html":{}}}],["health.dto.ts",{"_index":152,"title":{},"body":{"classes/CreateHealthDto.html":{},"classes/UpdateHealthDto.html":{},"coverage.html":{}}}],["health.service",{"_index":184,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":170,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":171,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":164,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":35,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["healthservice",{"_index":182,"title":{"injectables/HealthService.html":{}},"body":{"modules/HealthModule.html":{},"injectables/HealthService.html":{},"coverage.html":{},"overview.html":{}}}],["hello",{"_index":102,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":604,"title":{},"body":{"index.html":{}}}],["host",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["https://blog.ecosia.org/content/images/size/w1200/2021/02/cameroon.jpg",{"_index":327,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["https://blog.ecosia.org/content/images/size/w1200/2021/04/nigeria",{"_index":335,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["https://blog.ecosia.org/content/images/size/w1200/2021/04/philipinen",{"_index":318,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["https://blog.ecosia.org/content/images/size/w1200/2021/08/thailand_header.png",{"_index":304,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["https://nestjs.com",{"_index":611,"title":{},"body":{"index.html":{}}}],["i.id",{"_index":408,"title":{},"body":{"injectables/ReportsService.html":{}}}],["id",{"_index":109,"title":{},"body":{"entities/Country.html":{},"injectables/HealthService.html":{},"entities/Investment.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["identifier",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["imageurl",{"_index":127,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Country.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"entities/Investment.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateReportDto.html":{},"classes/UpdateTagDto.html":{}}}],["imports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/ProjectsModule.html":{},"modules/ReportsModule.html":{},"modules/TagsModule.html":{}}}],["inclusive",{"_index":332,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Country.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"entities/Investment.html":{},"classes/KeyValuePair.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"classes/ReportDto.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Country.html":{},"classes/CreateHealthDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateReportDto.html":{},"classes/CreateTagDto.html":{},"classes/Health.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"entities/Investment.html":{},"classes/KeyValuePair.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"classes/ReportDto.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateReportDto.html":{},"classes/UpdateTagDto.html":{}}}],["injectable",{"_index":98,"title":{"injectables/AppService.html":{},"injectables/HealthService.html":{},"injectables/ProjectsService.html":{},"injectables/ReportsService.html":{},"injectables/TagsService.html":{}},"body":{"injectables/AppService.html":{},"injectables/HealthService.html":{},"injectables/ProjectsService.html":{},"injectables/ReportsService.html":{},"injectables/TagsService.html":{},"coverage.html":{}}}],["injectables",{"_index":99,"title":{},"body":{"injectables/AppService.html":{},"injectables/HealthService.html":{},"injectables/ProjectsService.html":{},"injectables/ReportsService.html":{},"injectables/TagsService.html":{},"overview.html":{}}}],["injectrepository",{"_index":285,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/ReportsService.html":{},"injectables/TagsService.html":{}}}],["injectrepository(country",{"_index":397,"title":{},"body":{"injectables/ReportsService.html":{}}}],["injectrepository(investment",{"_index":398,"title":{},"body":{"injectables/ReportsService.html":{}}}],["injectrepository(project",{"_index":286,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["injectrepository(report",{"_index":396,"title":{},"body":{"injectables/ReportsService.html":{}}}],["injectrepository(tag",{"_index":458,"title":{},"body":{"injectables/TagsService.html":{}}}],["installation",{"_index":573,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":575,"title":{},"body":{"index.html":{}}}],["investment",{"_index":53,"title":{"entities/Investment.html":{}},"body":{"modules/AppModule.html":{},"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"coverage.html":{}}}],["investment.investmenttoreport",{"_index":144,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["investmentid",{"_index":141,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["investments",{"_index":223,"title":{},"body":{"classes/KeyValuePair.html":{},"classes/ReportDto.html":{},"injectables/ReportsService.html":{}}}],["investments.push(new",{"_index":410,"title":{},"body":{"injectables/ReportsService.html":{}}}],["investmentsrepository",{"_index":386,"title":{},"body":{"injectables/ReportsService.html":{}}}],["investmenttoreport",{"_index":138,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["item",{"_index":112,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["item.report",{"_index":113,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["join",{"_index":600,"title":{},"body":{"index.html":{}}}],["jointable",{"_index":121,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["kamil",{"_index":608,"title":{},"body":{"index.html":{}}}],["keyvaluepair",{"_index":216,"title":{"classes/KeyValuePair.html":{}},"body":{"classes/KeyValuePair.html":{},"classes/ReportDto.html":{},"injectables/ReportsService.html":{},"coverage.html":{}}}],["keyvaluepair(name",{"_index":411,"title":{},"body":{"injectables/ReportsService.html":{}}}],["land",{"_index":314,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["license",{"_index":614,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":591,"title":{},"body":{"index.html":{}}}],["limit",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["livelihoods",{"_index":324,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["local",{"_index":325,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["main",{"_index":486,"title":{},"body":{"injectables/TagsService.html":{}}}],["manager",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["manytomany",{"_index":120,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["manytomany(undefined",{"_index":235,"title":{},"body":{"entities/Project.html":{},"entities/Tag.html":{}}}],["manytoone",{"_index":123,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["manytoone(undefined",{"_index":344,"title":{},"body":{"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Country.html":{},"classes/CreateHealthDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateReportDto.html":{},"classes/CreateTagDto.html":{},"classes/Health.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"entities/Investment.html":{},"classes/KeyValuePair.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"classes/ReportDto.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateReportDto.html":{},"classes/UpdateTagDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["metadata",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["miscellaneous",{"_index":554,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":590,"title":{},"body":{"index.html":{}}}],["mode",{"_index":580,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/ProjectsModule.html":{},"modules/ReportsModule.html":{},"modules/TagsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/ProjectsModule.html":{},"modules/ReportsModule.html":{},"modules/TagsModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/ProjectsModule.html":{},"modules/ReportsModule.html":{},"modules/TagsModule.html":{},"modules.html":{},"overview.html":{}}}],["monocultures",{"_index":300,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["month",{"_index":135,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"classes/KeyValuePair.html":{},"entities/Project.html":{},"entities/Report.html":{},"classes/ReportDto.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["more",{"_index":603,"title":{},"body":{"index.html":{}}}],["mountain",{"_index":475,"title":{},"body":{"injectables/TagsService.html":{}}}],["mysql",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":609,"title":{},"body":{"index.html":{}}}],["name",{"_index":110,"title":{},"body":{"entities/Country.html":{},"injectables/HealthService.html":{},"entities/Investment.html":{},"classes/KeyValuePair.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"classes/ReportDto.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["native",{"_index":311,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["nest",{"_index":570,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":613,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":502,"title":{},"body":{"classes/UpdateProjectDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":498,"title":{},"body":{"classes/UpdateHealthDto.html":{},"classes/UpdateReportDto.html":{},"classes/UpdateTagDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":173,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"dependencies.html":{}}}],["new",{"_index":210,"title":{},"body":{"injectables/HealthService.html":{},"injectables/ProjectsService.html":{},"injectables/ReportsService.html":{},"injectables/TagsService.html":{},"coverage.html":{}}}],["news",{"_index":294,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["nigeria",{"_index":329,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/TagsService.html":{}}}],["node.js",{"_index":561,"title":{},"body":{"index.html":{}}}],["npm",{"_index":574,"title":{},"body":{"index.html":{}}}],["nq5h2x8la1nxva90",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["number",{"_index":115,"title":{},"body":{"entities/Country.html":{},"injectables/HealthService.html":{},"entities/Investment.html":{},"classes/KeyValuePair.html":{},"entities/Project.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"classes/ReportDto.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"injectables/TagsService.html":{}}}],["oliadkuxrl9xdugh.chr7pe7iynqr.eu",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["onetomany",{"_index":122,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["onetomany(undefined",{"_index":111,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Report.html":{}}}],["open",{"_index":592,"title":{},"body":{"index.html":{}}}],["opportunities",{"_index":331,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["optional",{"_index":196,"title":{},"body":{"injectables/HealthService.html":{},"classes/KeyValuePair.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/ReportDto.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["out",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/ProjectsModule.html":{},"modules/ReportsModule.html":{},"modules/TagsModule.html":{},"overview.html":{}}}],["overview",{"_index":618,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":526,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":252,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/ReportsController.html":{},"controllers/TagsController.html":{}}}],["parameters",{"_index":195,"title":{},"body":{"injectables/HealthService.html":{},"classes/KeyValuePair.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/ReportDto.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["partialtype",{"_index":497,"title":{},"body":{"classes/UpdateHealthDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateReportDto.html":{},"classes/UpdateTagDto.html":{}}}],["partialtype(createhealthdto",{"_index":500,"title":{},"body":{"classes/UpdateHealthDto.html":{}}}],["partialtype(createprojectdto",{"_index":504,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["partialtype(createreportdto",{"_index":506,"title":{},"body":{"classes/UpdateReportDto.html":{}}}],["partialtype(createtagdto",{"_index":508,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["partners",{"_index":462,"title":{},"body":{"injectables/TagsService.html":{}}}],["password",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["patch",{"_index":251,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/ReportsController.html":{},"controllers/TagsController.html":{}}}],["patch(':id",{"_index":248,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/ReportsController.html":{},"controllers/TagsController.html":{}}}],["philippines",{"_index":308,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["planting",{"_index":310,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["please",{"_index":601,"title":{},"body":{"index.html":{}}}],["poaching",{"_index":488,"title":{},"body":{"injectables/TagsService.html":{}}}],["poor",{"_index":492,"title":{},"body":{"injectables/TagsService.html":{}}}],["port",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":240,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/ReportsController.html":{},"controllers/TagsController.html":{}}}],["practices",{"_index":494,"title":{},"body":{"injectables/TagsService.html":{}}}],["prefix",{"_index":166,"title":{},"body":{"controllers/HealthController.html":{},"controllers/ProjectsController.html":{},"controllers/ReportsController.html":{},"controllers/TagsController.html":{}}}],["prices",{"_index":473,"title":{},"body":{"injectables/TagsService.html":{}}}],["primarygeneratedcolumn",{"_index":116,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["prince",{"_index":463,"title":{},"body":{"injectables/TagsService.html":{}}}],["pririt",{"_index":480,"title":{},"body":{"injectables/TagsService.html":{}}}],["private",{"_index":176,"title":{},"body":{"controllers/HealthController.html":{},"injectables/ProjectsService.html":{},"injectables/ReportsService.html":{},"injectables/TagsService.html":{}}}],["process.env.db_database",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_host",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_username",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["production",{"_index":582,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":560,"title":{},"body":{"index.html":{}}}],["project",{"_index":54,"title":{"entities/Project.html":{}},"body":{"modules/AppModule.html":{},"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{},"coverage.html":{},"index.html":{}}}],["project.dto",{"_index":256,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UpdateProjectDto.html":{}}}],["project.dto.ts",{"_index":155,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["project.tags",{"_index":132,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["projects",{"_index":134,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["projects.controller",{"_index":270,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["projects.service",{"_index":255,"title":{},"body":{"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{}}}],["projects/projects.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["projectscontroller",{"_index":237,"title":{"controllers/ProjectsController.html":{}},"body":{"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"coverage.html":{}}}],["projectsmodule",{"_index":36,"title":{"modules/ProjectsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectsModule.html":{},"modules.html":{},"overview.html":{}}}],["projectsrepository",{"_index":278,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["projectsservice",{"_index":254,"title":{"injectables/ProjectsService.html":{}},"body":{"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":281,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/ReportsService.html":{},"injectables/TagsService.html":{}}}],["promoting",{"_index":322,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["properties",{"_index":106,"title":{"properties.html":{}},"body":{"entities/Country.html":{},"entities/Investment.html":{},"classes/KeyValuePair.html":{},"entities/Project.html":{},"entities/Report.html":{},"classes/ReportDto.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{},"injectables/TagsService.html":{},"properties.html":{}}}],["protected",{"_index":467,"title":{},"body":{"injectables/TagsService.html":{}}}],["provide",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/ProjectsModule.html":{},"modules/ReportsModule.html":{},"modules/TagsModule.html":{}}}],["providing",{"_index":330,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["public",{"_index":107,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["r.countryid)?.name",{"_index":416,"title":{},"body":{"injectables/ReportsService.html":{}}}],["r.investmentid)?.name",{"_index":409,"title":{},"body":{"injectables/ReportsService.html":{}}}],["r.value",{"_index":412,"title":{},"body":{"injectables/ReportsService.html":{}}}],["read",{"_index":602,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/ProjectsController.html":{},"controllers/ReportsController.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["reflect",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["relations",{"_index":290,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/ReportsService.html":{}}}],["remove",{"_index":191,"title":{},"body":{"injectables/HealthService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["remove(@param('id",{"_index":265,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/ReportsController.html":{},"controllers/TagsController.html":{}}}],["remove(id",{"_index":200,"title":{},"body":{"injectables/HealthService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["removes",{"_index":212,"title":{},"body":{"injectables/HealthService.html":{}}}],["report",{"_index":55,"title":{"entities/Report.html":{}},"body":{"modules/AppModule.html":{},"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"coverage.html":{}}}],["report.dto",{"_index":369,"title":{},"body":{"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"classes/UpdateReportDto.html":{}}}],["report.dto.ts",{"_index":158,"title":{},"body":{"classes/CreateReportDto.html":{},"classes/UpdateReportDto.html":{},"coverage.html":{}}}],["report.reporttocountries",{"_index":147,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["report.reporttocountries.foreach((r",{"_index":413,"title":{},"body":{"injectables/ReportsService.html":{}}}],["report.reporttoinvestments",{"_index":143,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["report.reporttoinvestments.foreach((r",{"_index":406,"title":{},"body":{"injectables/ReportsService.html":{}}}],["reportdto",{"_index":222,"title":{"classes/ReportDto.html":{}},"body":{"classes/KeyValuePair.html":{},"classes/ReportDto.html":{},"injectables/ReportsService.html":{},"coverage.html":{}}}],["reportdto(report.month",{"_index":418,"title":{},"body":{"injectables/ReportsService.html":{}}}],["reportid",{"_index":140,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["reports",{"_index":359,"title":{},"body":{"controllers/ReportsController.html":{},"injectables/ReportsService.html":{}}}],["reports.controller",{"_index":379,"title":{},"body":{"modules/ReportsModule.html":{}}}],["reports.map((report",{"_index":405,"title":{},"body":{"injectables/ReportsService.html":{}}}],["reports.service",{"_index":368,"title":{},"body":{"controllers/ReportsController.html":{},"modules/ReportsModule.html":{}}}],["reports/reports.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["reportscontroller",{"_index":357,"title":{"controllers/ReportsController.html":{}},"body":{"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"coverage.html":{}}}],["reportsmodule",{"_index":37,"title":{"modules/ReportsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ReportsModule.html":{},"modules.html":{},"overview.html":{}}}],["reportsrepository",{"_index":388,"title":{},"body":{"injectables/ReportsService.html":{}}}],["reportsservice",{"_index":367,"title":{"injectables/ReportsService.html":{}},"body":{"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"coverage.html":{},"overview.html":{}}}],["reporttocountries",{"_index":137,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{}}}],["reporttocountry",{"_index":56,"title":{"entities/ReportToCountry.html":{}},"body":{"modules/AppModule.html":{},"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{},"coverage.html":{}}}],["reporttocountryid",{"_index":145,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["reporttoinvestment",{"_index":57,"title":{"entities/ReportToInvestment.html":{}},"body":{"modules/AppModule.html":{},"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{},"coverage.html":{}}}],["reporttoinvestmentid",{"_index":139,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["reporttoinvestments",{"_index":136,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{}}}],["repository",{"_index":276,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/ReportsService.html":{},"injectables/TagsService.html":{},"index.html":{}}}],["reset",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/ProjectsModule.html":{},"modules/ReportsModule.html":{},"modules/TagsModule.html":{},"overview.html":{}}}],["restore",{"_index":313,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Country.html":{},"classes/CreateHealthDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateReportDto.html":{},"classes/CreateTagDto.html":{},"classes/Health.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"entities/Investment.html":{},"classes/KeyValuePair.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"classes/ReportDto.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateReportDto.html":{},"classes/UpdateTagDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/HealthController.html":{},"injectables/HealthService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["rimraf",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["river",{"_index":482,"title":{},"body":{"injectables/TagsService.html":{}}}],["rubber",{"_index":297,"title":{},"body":{"injectables/ProjectsService.html":{},"injectables/TagsService.html":{}}}],["run",{"_index":577,"title":{},"body":{"index.html":{}}}],["rural",{"_index":333,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["rxjs",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":565,"title":{},"body":{"index.html":{}}}],["scope",{"_index":125,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["seedlings",{"_index":312,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["server",{"_index":566,"title":{},"body":{"index.html":{}}}],["side",{"_index":567,"title":{},"body":{"index.html":{}}}],["smallholder",{"_index":317,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["songkhla",{"_index":464,"title":{},"body":{"injectables/TagsService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Country.html":{},"classes/CreateHealthDto.html":{},"classes/CreateProjectDto.html":{},"classes/CreateReportDto.html":{},"classes/CreateTagDto.html":{},"classes/Health.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"injectables/HealthService.html":{},"entities/Investment.html":{},"classes/KeyValuePair.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"classes/ReportDto.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"controllers/ReportsController.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"classes/UpdateHealthDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UpdateReportDto.html":{},"classes/UpdateTagDto.html":{},"index.html":{}}}],["sponsors",{"_index":595,"title":{},"body":{"index.html":{}}}],["squirrel",{"_index":476,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/.../app.module.ts",{"_index":557,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":556,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/_shared/entities",{"_index":271,"title":{},"body":{"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"modules/ReportsModule.html":{},"injectables/ReportsService.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{}}}],["src/_shared/entities.ts",{"_index":105,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{},"coverage.html":{}}}],["src/_shared/entities.ts:101",{"_index":356,"title":{},"body":{"entities/ReportToInvestment.html":{}}}],["src/_shared/entities.ts:104",{"_index":353,"title":{},"body":{"entities/ReportToInvestment.html":{}}}],["src/_shared/entities.ts:107",{"_index":351,"title":{},"body":{"entities/ReportToInvestment.html":{}}}],["src/_shared/entities.ts:113",{"_index":349,"title":{},"body":{"entities/ReportToCountry.html":{}}}],["src/_shared/entities.ts:116",{"_index":348,"title":{},"body":{"entities/ReportToCountry.html":{}}}],["src/_shared/entities.ts:119",{"_index":346,"title":{},"body":{"entities/ReportToCountry.html":{}}}],["src/_shared/entities.ts:122",{"_index":350,"title":{},"body":{"entities/ReportToCountry.html":{}}}],["src/_shared/entities.ts:125",{"_index":347,"title":{},"body":{"entities/ReportToCountry.html":{}}}],["src/_shared/entities.ts:128",{"_index":345,"title":{},"body":{"entities/ReportToCountry.html":{}}}],["src/_shared/entities.ts:14",{"_index":231,"title":{},"body":{"entities/Project.html":{}}}],["src/_shared/entities.ts:17",{"_index":233,"title":{},"body":{"entities/Project.html":{}}}],["src/_shared/entities.ts:20",{"_index":234,"title":{},"body":{"entities/Project.html":{}}}],["src/_shared/entities.ts:23",{"_index":230,"title":{},"body":{"entities/Project.html":{}}}],["src/_shared/entities.ts:26",{"_index":232,"title":{},"body":{"entities/Project.html":{}}}],["src/_shared/entities.ts:29",{"_index":236,"title":{},"body":{"entities/Project.html":{}}}],["src/_shared/entities.ts:35",{"_index":421,"title":{},"body":{"entities/Tag.html":{}}}],["src/_shared/entities.ts:38",{"_index":425,"title":{},"body":{"entities/Tag.html":{}}}],["src/_shared/entities.ts:41",{"_index":424,"title":{},"body":{"entities/Tag.html":{}}}],["src/_shared/entities.ts:47",{"_index":423,"title":{},"body":{"entities/Tag.html":{}}}],["src/_shared/entities.ts:53",{"_index":336,"title":{},"body":{"entities/Report.html":{}}}],["src/_shared/entities.ts:56",{"_index":337,"title":{},"body":{"entities/Report.html":{}}}],["src/_shared/entities.ts:59",{"_index":339,"title":{},"body":{"entities/Report.html":{}}}],["src/_shared/entities.ts:62",{"_index":338,"title":{},"body":{"entities/Report.html":{}}}],["src/_shared/entities.ts:68",{"_index":213,"title":{},"body":{"entities/Investment.html":{}}}],["src/_shared/entities.ts:71",{"_index":215,"title":{},"body":{"entities/Investment.html":{}}}],["src/_shared/entities.ts:74",{"_index":214,"title":{},"body":{"entities/Investment.html":{}}}],["src/_shared/entities.ts:80",{"_index":117,"title":{},"body":{"entities/Country.html":{}}}],["src/_shared/entities.ts:83",{"_index":119,"title":{},"body":{"entities/Country.html":{}}}],["src/_shared/entities.ts:86",{"_index":114,"title":{},"body":{"entities/Country.html":{}}}],["src/_shared/entities.ts:92",{"_index":355,"title":{},"body":{"entities/ReportToInvestment.html":{}}}],["src/_shared/entities.ts:95",{"_index":354,"title":{},"body":{"entities/ReportToInvestment.html":{}}}],["src/_shared/entities.ts:98",{"_index":352,"title":{},"body":{"entities/ReportToInvestment.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app.service.ts",{"_index":100,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":101,"title":{},"body":{"injectables/AppService.html":{}}}],["src/health/dto/create",{"_index":151,"title":{},"body":{"classes/CreateHealthDto.html":{},"coverage.html":{}}}],["src/health/dto/update",{"_index":496,"title":{},"body":{"classes/UpdateHealthDto.html":{},"coverage.html":{}}}],["src/health/entities/health.entity.ts",{"_index":163,"title":{},"body":{"classes/Health.html":{},"coverage.html":{}}}],["src/health/health.controller.ts",{"_index":165,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:16",{"_index":169,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":183,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/health/health.service.ts",{"_index":187,"title":{},"body":{"injectables/HealthService.html":{},"coverage.html":{}}}],["src/health/health.service.ts:11",{"_index":197,"title":{},"body":{"injectables/HealthService.html":{}}}],["src/health/health.service.ts:15",{"_index":199,"title":{},"body":{"injectables/HealthService.html":{}}}],["src/health/health.service.ts:19",{"_index":204,"title":{},"body":{"injectables/HealthService.html":{}}}],["src/health/health.service.ts:23",{"_index":201,"title":{},"body":{"injectables/HealthService.html":{}}}],["src/health/health.service.ts:7",{"_index":194,"title":{},"body":{"injectables/HealthService.html":{}}}],["src/main.ts",{"_index":517,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/projects/dto/create",{"_index":154,"title":{},"body":{"classes/CreateProjectDto.html":{},"coverage.html":{}}}],["src/projects/dto/update",{"_index":501,"title":{},"body":{"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["src/projects/projects.controller.ts",{"_index":238,"title":{},"body":{"controllers/ProjectsController.html":{},"coverage.html":{}}}],["src/projects/projects.controller.ts:19",{"_index":241,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/projects/projects.controller.ts:24",{"_index":242,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/projects/projects.controller.ts:29",{"_index":244,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/projects/projects.controller.ts:34",{"_index":249,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/projects/projects.controller.ts:39",{"_index":246,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/projects/projects.module.ts",{"_index":269,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["src/projects/projects.service.ts",{"_index":273,"title":{},"body":{"injectables/ProjectsService.html":{},"coverage.html":{}}}],["src/projects/projects.service.ts:15",{"_index":279,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/projects/projects.service.ts:19",{"_index":280,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/projects/projects.service.ts:23",{"_index":282,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/projects/projects.service.ts:30",{"_index":284,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/projects/projects.service.ts:34",{"_index":283,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/projects/projects.service.ts:9",{"_index":277,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/reports/dto/create",{"_index":157,"title":{},"body":{"classes/CreateReportDto.html":{},"coverage.html":{}}}],["src/reports/dto/report",{"_index":217,"title":{},"body":{"classes/KeyValuePair.html":{},"classes/ReportDto.html":{},"coverage.html":{}}}],["src/reports/dto/update",{"_index":505,"title":{},"body":{"classes/UpdateReportDto.html":{},"coverage.html":{}}}],["src/reports/entities/report.entity.ts",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["src/reports/reports.controller.ts",{"_index":358,"title":{},"body":{"controllers/ReportsController.html":{},"coverage.html":{}}}],["src/reports/reports.controller.ts:11",{"_index":361,"title":{},"body":{"controllers/ReportsController.html":{}}}],["src/reports/reports.controller.ts:16",{"_index":362,"title":{},"body":{"controllers/ReportsController.html":{}}}],["src/reports/reports.controller.ts:21",{"_index":363,"title":{},"body":{"controllers/ReportsController.html":{}}}],["src/reports/reports.controller.ts:26",{"_index":366,"title":{},"body":{"controllers/ReportsController.html":{}}}],["src/reports/reports.controller.ts:31",{"_index":364,"title":{},"body":{"controllers/ReportsController.html":{}}}],["src/reports/reports.module.ts",{"_index":378,"title":{},"body":{"modules/ReportsModule.html":{}}}],["src/reports/reports.service.ts",{"_index":383,"title":{},"body":{"injectables/ReportsService.html":{},"coverage.html":{}}}],["src/reports/reports.service.ts:10",{"_index":387,"title":{},"body":{"injectables/ReportsService.html":{}}}],["src/reports/reports.service.ts:20",{"_index":389,"title":{},"body":{"injectables/ReportsService.html":{}}}],["src/reports/reports.service.ts:24",{"_index":390,"title":{},"body":{"injectables/ReportsService.html":{}}}],["src/reports/reports.service.ts:52",{"_index":391,"title":{},"body":{"injectables/ReportsService.html":{}}}],["src/reports/reports.service.ts:58",{"_index":393,"title":{},"body":{"injectables/ReportsService.html":{}}}],["src/reports/reports.service.ts:62",{"_index":392,"title":{},"body":{"injectables/ReportsService.html":{}}}],["src/tags/dto/create",{"_index":160,"title":{},"body":{"classes/CreateTagDto.html":{},"coverage.html":{}}}],["src/tags/dto/update",{"_index":507,"title":{},"body":{"classes/UpdateTagDto.html":{},"coverage.html":{}}}],["src/tags/tags.controller.ts",{"_index":427,"title":{},"body":{"controllers/TagsController.html":{},"coverage.html":{}}}],["src/tags/tags.controller.ts:11",{"_index":429,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:16",{"_index":430,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:21",{"_index":431,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:26",{"_index":434,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.controller.ts:31",{"_index":432,"title":{},"body":{"controllers/TagsController.html":{}}}],["src/tags/tags.module.ts",{"_index":446,"title":{},"body":{"modules/TagsModule.html":{}}}],["src/tags/tags.service.ts",{"_index":449,"title":{},"body":{"injectables/TagsService.html":{},"coverage.html":{}}}],["src/tags/tags.service.ts:10",{"_index":451,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:17",{"_index":453,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:21",{"_index":454,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:25",{"_index":455,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:29",{"_index":457,"title":{},"body":{"injectables/TagsService.html":{}}}],["src/tags/tags.service.ts:33",{"_index":456,"title":{},"body":{"injectables/TagsService.html":{}}}],["start",{"_index":578,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":581,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":583,"title":{},"body":{"index.html":{}}}],["started",{"_index":559,"title":{"index.html":{}},"body":{}}],["starter",{"_index":572,"title":{},"body":{"index.html":{}}}],["statements",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":605,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Country.html":{},"injectables/HealthService.html":{},"entities/Investment.html":{},"classes/KeyValuePair.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"classes/ReportDto.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["subtitle",{"_index":131,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{},"injectables/TagsService.html":{}}}],["support",{"_index":596,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supporting",{"_index":296,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["sustainable",{"_index":301,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["svg",{"_index":616,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["systems",{"_index":316,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["table",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":58,"title":{"entities/Tag.html":{}},"body":{"modules/AppModule.html":{},"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"coverage.html":{}}}],["tag.dto",{"_index":437,"title":{},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/UpdateTagDto.html":{}}}],["tag.dto.ts",{"_index":161,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/UpdateTagDto.html":{},"coverage.html":{}}}],["tag.projects",{"_index":128,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["tags",{"_index":129,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["tags.controller",{"_index":447,"title":{},"body":{"modules/TagsModule.html":{}}}],["tags.service",{"_index":436,"title":{},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{}}}],["tags/tags.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["tagscontroller",{"_index":426,"title":{"controllers/TagsController.html":{}},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{},"coverage.html":{}}}],["tagsmodule",{"_index":38,"title":{"modules/TagsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TagsModule.html":{},"modules.html":{},"overview.html":{}}}],["tagsrepository",{"_index":452,"title":{},"body":{"injectables/TagsService.html":{}}}],["tagsservice",{"_index":435,"title":{"injectables/TagsService.html":{}},"body":{"controllers/TagsController.html":{},"modules/TagsModule.html":{},"injectables/TagsService.html":{},"coverage.html":{},"overview.html":{}}}],["terminusmodule",{"_index":186,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":586,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":589,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":588,"title":{},"body":{"index.html":{}}}],["tests",{"_index":585,"title":{},"body":{"index.html":{}}}],["thailand",{"_index":295,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["thanks",{"_index":594,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.countries",{"_index":227,"title":{},"body":{"classes/KeyValuePair.html":{},"classes/ReportDto.html":{}}}],["this.countriesrepository.find",{"_index":402,"title":{},"body":{"injectables/ReportsService.html":{}}}],["this.db.pingcheck('database",{"_index":179,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.health.check",{"_index":178,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.investments",{"_index":226,"title":{},"body":{"classes/KeyValuePair.html":{},"classes/ReportDto.html":{}}}],["this.investmentsrepository.find",{"_index":404,"title":{},"body":{"injectables/ReportsService.html":{}}}],["this.month",{"_index":225,"title":{},"body":{"classes/KeyValuePair.html":{},"classes/ReportDto.html":{}}}],["this.name",{"_index":228,"title":{},"body":{"classes/KeyValuePair.html":{},"classes/ReportDto.html":{}}}],["this.projectsrepository.delete(id",{"_index":291,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.projectsrepository.find",{"_index":288,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.projectsrepository.findone",{"_index":289,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.projectsservice.create(createprojectdto",{"_index":259,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.findall",{"_index":260,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.findone(+id",{"_index":262,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.remove(+id",{"_index":266,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.update(+id",{"_index":264,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.reportsrepository.delete(id",{"_index":420,"title":{},"body":{"injectables/ReportsService.html":{}}}],["this.reportsrepository.find",{"_index":400,"title":{},"body":{"injectables/ReportsService.html":{}}}],["this.reportsrepository.findone",{"_index":419,"title":{},"body":{"injectables/ReportsService.html":{}}}],["this.reportsservice.create(createreportdto",{"_index":371,"title":{},"body":{"controllers/ReportsController.html":{}}}],["this.reportsservice.findall",{"_index":372,"title":{},"body":{"controllers/ReportsController.html":{}}}],["this.reportsservice.findone(+id",{"_index":373,"title":{},"body":{"controllers/ReportsController.html":{}}}],["this.reportsservice.remove(+id",{"_index":375,"title":{},"body":{"controllers/ReportsController.html":{}}}],["this.reportsservice.update(+id",{"_index":374,"title":{},"body":{"controllers/ReportsController.html":{}}}],["this.tagsrepository.delete(id",{"_index":461,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagsrepository.find",{"_index":459,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagsrepository.findoneby",{"_index":460,"title":{},"body":{"injectables/TagsService.html":{}}}],["this.tagsservice.create(createtagdto",{"_index":439,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.findall",{"_index":440,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.findone(+id",{"_index":441,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.remove(+id",{"_index":443,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.tagsservice.update(+id",{"_index":442,"title":{},"body":{"controllers/TagsController.html":{}}}],["this.value",{"_index":229,"title":{},"body":{"classes/KeyValuePair.html":{},"classes/ReportDto.html":{}}}],["threats",{"_index":487,"title":{},"body":{"injectables/TagsService.html":{}}}],["throttlermodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["title",{"_index":130,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{},"injectables/TagsService.html":{}}}],["touch",{"_index":606,"title":{},"body":{"index.html":{}}}],["transform",{"_index":299,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["tree",{"_index":309,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["trees",{"_index":307,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["true",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{}}}],["true})@jointable",{"_index":422,"title":{},"body":{"entities/Tag.html":{}}}],["ttl",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["turaco",{"_index":478,"title":{},"body":{"injectables/TagsService.html":{}}}],["twitter",{"_index":612,"title":{},"body":{"index.html":{}}}],["type",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"entities/Country.html":{},"injectables/HealthService.html":{},"entities/Investment.html":{},"classes/KeyValuePair.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"classes/ReportDto.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{},"coverage.html":{}}}],["typeorm",{"_index":124,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"entities/Project.html":{},"injectables/ProjectsService.html":{},"entities/Report.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"injectables/ReportsService.html":{},"entities/Tag.html":{},"injectables/TagsService.html":{},"dependencies.html":{}}}],["typeormhealthindicator",{"_index":172,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/ProjectsModule.html":{},"modules/ReportsModule.html":{},"modules/TagsModule.html":{}}}],["typeormmodule.forfeature([country",{"_index":381,"title":{},"body":{"modules/ReportsModule.html":{}}}],["typeormmodule.forfeature([investment",{"_index":382,"title":{},"body":{"modules/ReportsModule.html":{}}}],["typeormmodule.forfeature([project",{"_index":272,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["typeormmodule.forfeature([report",{"_index":380,"title":{},"body":{"modules/ReportsModule.html":{}}}],["typeormmodule.forfeature([tag",{"_index":448,"title":{},"body":{"modules/TagsModule.html":{}}}],["typeormmodule.forroot",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":503,"title":{},"body":{"classes/UpdateProjectDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":571,"title":{},"body":{"index.html":{}}}],["ui",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":584,"title":{},"body":{"index.html":{}}}],["university/einhorn",{"_index":465,"title":{},"body":{"injectables/TagsService.html":{}}}],["unlicensed",{"_index":623,"title":{},"body":{"properties.html":{}}}],["update",{"_index":192,"title":{},"body":{"injectables/HealthService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["update(@param('id",{"_index":263,"title":{},"body":{"controllers/ProjectsController.html":{},"controllers/ReportsController.html":{},"controllers/TagsController.html":{}}}],["update(id",{"_index":202,"title":{},"body":{"injectables/HealthService.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"controllers/TagsController.html":{},"injectables/TagsService.html":{}}}],["updatehealthdto",{"_index":203,"title":{"classes/UpdateHealthDto.html":{}},"body":{"injectables/HealthService.html":{},"classes/UpdateHealthDto.html":{},"coverage.html":{}}}],["updateprojectdto",{"_index":247,"title":{"classes/UpdateProjectDto.html":{}},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UpdateProjectDto.html":{},"coverage.html":{}}}],["updatereportdto",{"_index":365,"title":{"classes/UpdateReportDto.html":{}},"body":{"controllers/ReportsController.html":{},"injectables/ReportsService.html":{},"classes/UpdateReportDto.html":{},"coverage.html":{}}}],["updates",{"_index":211,"title":{},"body":{"injectables/HealthService.html":{},"injectables/ProjectsService.html":{},"injectables/ReportsService.html":{},"injectables/TagsService.html":{}}}],["updatetagdto",{"_index":433,"title":{"classes/UpdateTagDto.html":{}},"body":{"controllers/TagsController.html":{},"injectables/TagsService.html":{},"classes/UpdateTagDto.html":{},"coverage.html":{}}}],["updating",{"_index":468,"title":{},"body":{"injectables/TagsService.html":{}}}],["urbanization",{"_index":495,"title":{},"body":{"injectables/TagsService.html":{}}}],["useclass",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["username",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["value",{"_index":142,"title":{},"body":{"entities/Country.html":{},"entities/Investment.html":{},"classes/KeyValuePair.html":{},"entities/Project.html":{},"entities/Report.html":{},"classes/ReportDto.html":{},"entities/ReportToCountry.html":{},"entities/ReportToInvestment.html":{},"entities/Tag.html":{}}}],["var",{"_index":399,"title":{},"body":{"injectables/ReportsService.html":{}}}],["version",{"_index":621,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":579,"title":{},"body":{"index.html":{}}}],["website",{"_index":610,"title":{},"body":{"index.html":{}}}],["west",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["wildlife",{"_index":466,"title":{},"body":{"injectables/TagsService.html":{}}}],["world",{"_index":103,"title":{},"body":{"injectables/AppService.html":{}}}],["xjl43fm5omgfojqk",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["you'd",{"_index":599,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules/ProjectsModule.html":{},"modules/ReportsModule.html":{},"modules/TagsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nProjectsModule\n\nProjectsModule\n\nAppModule -->\n\nProjectsModule->AppModule\n\n\n\n\n\nReportsModule\n\nReportsModule\n\nAppModule -->\n\nReportsModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HealthModule\n                        \n                        \n                            ProjectsModule\n                        \n                        \n                            ReportsModule\n                        \n                        \n                            TagsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CacheInterceptor, CacheModule, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ProjectsModule } from './projects/projects.module';\nimport { TagsModule } from './tags/tags.module';\nimport {\n  Country,\n  Investment,\n  Project,\n  Report,\n  ReportToCountry,\n  ReportToInvestment,\n  Tag,\n} from './_shared/entities';\nimport { ReportsModule } from './reports/reports.module';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { APP_INTERCEPTOR } from '@nestjs/core';\nimport { HealthModule } from './health/health.module';\n\n@Module({\n  imports: [\n    ProjectsModule,\n    TagsModule,\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      port: 3306,\n      ...getConnection(),\n      entities: [\n        Tag,\n        Project,\n        Report,\n        Investment,\n        Country,\n        ReportToCountry,\n        ReportToInvestment,\n      ],\n      synchronize: true,\n    }),\n    ReportsModule,\n    CacheModule.register(),\n    ThrottlerModule.forRoot({\n      ttl: 60,\n      limit: 10,\n    }),\n    HealthModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    { provide: APP_INTERCEPTOR, useClass: CacheInterceptor },\n  ],\n})\nexport class AppModule {}\n\n// function getConnection() {\n//   return {\n//     host: process.env.DB_HOST,\n//     username: process.env.DB_USERNAME,\n//     password: process.env.DB_PASSWORD,\n//     database: process.env.DB_DATABASE,\n//   };\n// }\n\nfunction getConnection() {\n  return {\n    host: 'oliadkuxrl9xdugh.chr7pe7iynqr.eu-west-1.rds.amazonaws.com',\n    username: 'nq5h2x8la1nxva90',\n    password: 'xjl43fm5omgfojqk',\n    database: 'bmg6kkfdmf4wgnwe',\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Country.html":{"url":"entities/Country.html","title":"entity - Country","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Country\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_shared/entities.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                countryToReport\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        countryToReport\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReportToCountry[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, item => item.report)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:83\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  ManyToMany,\n  JoinTable,\n  OneToMany,\n  ManyToOne,\n} from 'typeorm';\n\n@Entity()\nexport class Project {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  scope: string;\n\n  @Column()\n  desc: string;\n\n  @Column()\n  imageUrl: string;\n\n  @ManyToMany(() => Tag, (tag) => tag.projects)\n  tags: Tag[];\n}\n\n@Entity()\nexport class Tag {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  title: string;\n\n  @Column()\n  subtitle: string;\n\n  @ManyToMany(() => Project, (project) => project.tags, {\n    cascade: true,\n  })\n  @JoinTable()\n  projects: Project[];\n}\n\n@Entity()\nexport class Report {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  month: string;\n\n  @OneToMany(() => ReportToInvestment, (item) => item.report)\n  reportToInvestments: ReportToInvestment[];\n\n  @OneToMany(() => ReportToCountry, (item) => item.report)\n  reportToCountries: ReportToCountry[];\n}\n\n@Entity()\nexport class Investment {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @OneToMany(() => ReportToInvestment, (item) => item.report)\n  public investmentToReport!: ReportToInvestment[];\n}\n\n@Entity()\nexport class Country {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @OneToMany(() => ReportToCountry, (item) => item.report)\n  public countryToReport!: ReportToCountry[];\n}\n\n@Entity()\nexport class ReportToInvestment {\n  @PrimaryGeneratedColumn()\n  public reportToInvestmentId!: number;\n\n  @Column()\n  public reportId!: number;\n\n  @Column()\n  public investmentId!: number;\n\n  @Column()\n  public value!: number;\n\n  @ManyToOne(() => Report, (report) => report.reportToInvestments)\n  public report!: Report;\n\n  @ManyToOne(() => Investment, (investment) => investment.investmentToReport)\n  public investment!: Investment;\n}\n\n@Entity()\nexport class ReportToCountry {\n  @PrimaryGeneratedColumn()\n  public reportToCountryId!: number;\n\n  @Column()\n  public reportId!: number;\n\n  @Column()\n  public countryId!: number;\n\n  @Column()\n  public value!: number;\n\n  @ManyToOne(() => Report, (report) => report.reportToCountries)\n  public report!: Report;\n\n  @ManyToOne(() => Country, (country) => country.countryToReport)\n  public country!: Country;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateHealthDto.html":{"url":"classes/CreateHealthDto.html","title":"class - CreateHealthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateHealthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/dto/create-health.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateHealthDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProjectDto.html":{"url":"classes/CreateProjectDto.html","title":"class - CreateProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/projects/dto/create-project.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateProjectDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReportDto.html":{"url":"classes/CreateReportDto.html","title":"class - CreateReportDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReportDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reports/dto/create-report.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateReportDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTagDto.html":{"url":"classes/CreateTagDto.html","title":"class - CreateTagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/dto/create-tag.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateTagDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Health.html":{"url":"classes/Health.html","title":"class - Health","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Health\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/entities/health.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Health {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        check\n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n} from '@nestjs/common';\nimport { HealthCheck, HealthCheckService, TypeOrmHealthIndicator } from '@nestjs/terminus';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private readonly db: TypeOrmHealthIndicator,\n  ) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([() => this.db.pingCheck('database')]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_providers\n\n\n\n\nHealthService\n\nHealthService\n\n\n\nHealthModule\n\nHealthModule\n\nHealthModule -->\n\nHealthService->HealthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HealthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthService } from './health.service';\nimport { HealthController } from './health.controller';\nimport { TerminusModule } from '@nestjs/terminus';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n  providers: [HealthService]\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HealthService.html":{"url":"injectables/HealthService.html","title":"injectable - HealthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HealthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createHealthDto: CreateHealthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createHealthDto\n                                    \n                                                CreateHealthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateHealthDto: UpdateHealthDto)\n                \n            \n\n\n            \n                \n                    Defined in src/health/health.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateHealthDto\n                                    \n                                                UpdateHealthDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateHealthDto } from './dto/create-health.dto';\nimport { UpdateHealthDto } from './dto/update-health.dto';\n\n@Injectable()\nexport class HealthService {\n  create(createHealthDto: CreateHealthDto) {\n    return 'This action adds a new health';\n  }\n\n  findAll() {\n    return `This action returns all health`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} health`;\n  }\n\n  update(id: number, updateHealthDto: UpdateHealthDto) {\n    return `This action updates a #${id} health`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} health`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Investment.html":{"url":"entities/Investment.html","title":"entity - Investment","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Investment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_shared/entities.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    Public\n                                investmentToReport\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        investmentToReport\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReportToInvestment[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, item => item.report)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:71\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  ManyToMany,\n  JoinTable,\n  OneToMany,\n  ManyToOne,\n} from 'typeorm';\n\n@Entity()\nexport class Project {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  scope: string;\n\n  @Column()\n  desc: string;\n\n  @Column()\n  imageUrl: string;\n\n  @ManyToMany(() => Tag, (tag) => tag.projects)\n  tags: Tag[];\n}\n\n@Entity()\nexport class Tag {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  title: string;\n\n  @Column()\n  subtitle: string;\n\n  @ManyToMany(() => Project, (project) => project.tags, {\n    cascade: true,\n  })\n  @JoinTable()\n  projects: Project[];\n}\n\n@Entity()\nexport class Report {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  month: string;\n\n  @OneToMany(() => ReportToInvestment, (item) => item.report)\n  reportToInvestments: ReportToInvestment[];\n\n  @OneToMany(() => ReportToCountry, (item) => item.report)\n  reportToCountries: ReportToCountry[];\n}\n\n@Entity()\nexport class Investment {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @OneToMany(() => ReportToInvestment, (item) => item.report)\n  public investmentToReport!: ReportToInvestment[];\n}\n\n@Entity()\nexport class Country {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @OneToMany(() => ReportToCountry, (item) => item.report)\n  public countryToReport!: ReportToCountry[];\n}\n\n@Entity()\nexport class ReportToInvestment {\n  @PrimaryGeneratedColumn()\n  public reportToInvestmentId!: number;\n\n  @Column()\n  public reportId!: number;\n\n  @Column()\n  public investmentId!: number;\n\n  @Column()\n  public value!: number;\n\n  @ManyToOne(() => Report, (report) => report.reportToInvestments)\n  public report!: Report;\n\n  @ManyToOne(() => Investment, (investment) => investment.investmentToReport)\n  public investment!: Investment;\n}\n\n@Entity()\nexport class ReportToCountry {\n  @PrimaryGeneratedColumn()\n  public reportToCountryId!: number;\n\n  @Column()\n  public reportId!: number;\n\n  @Column()\n  public countryId!: number;\n\n  @Column()\n  public value!: number;\n\n  @ManyToOne(() => Report, (report) => report.reportToCountries)\n  public report!: Report;\n\n  @ManyToOne(() => Country, (country) => country.countryToReport)\n  public country!: Country;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyValuePair.html":{"url":"classes/KeyValuePair.html","title":"class - KeyValuePair","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyValuePair\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reports/dto/report-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value: number)\n                    \n                \n                        \n                            \n                                Defined in src/reports/dto/report-dto.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/reports/dto/report-dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/reports/dto/report-dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ReportDto {\n  month!: string;\n  investments!: KeyValuePair[];\n  countries!: KeyValuePair[];\n\n  constructor(\n    month: string,\n    investments: KeyValuePair[],\n    countries: KeyValuePair[],\n  ) {\n    this.month = month;\n    this.investments = investments;\n    this.countries = countries;\n  }\n}\n\nexport class KeyValuePair {\n  name!: string;\n  value!: number;\n\n  constructor(name: string, value: number) {\n    this.name = name;\n    this.value = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Project.html":{"url":"entities/Project.html","title":"entity - Project","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_shared/entities.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                desc\n                            \n                            \n                                id\n                            \n                            \n                                imageUrl\n                            \n                            \n                                name\n                            \n                            \n                                scope\n                            \n                            \n                                tags\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scope\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tag[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, tag => tag.projects)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  ManyToMany,\n  JoinTable,\n  OneToMany,\n  ManyToOne,\n} from 'typeorm';\n\n@Entity()\nexport class Project {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  scope: string;\n\n  @Column()\n  desc: string;\n\n  @Column()\n  imageUrl: string;\n\n  @ManyToMany(() => Tag, (tag) => tag.projects)\n  tags: Tag[];\n}\n\n@Entity()\nexport class Tag {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  title: string;\n\n  @Column()\n  subtitle: string;\n\n  @ManyToMany(() => Project, (project) => project.tags, {\n    cascade: true,\n  })\n  @JoinTable()\n  projects: Project[];\n}\n\n@Entity()\nexport class Report {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  month: string;\n\n  @OneToMany(() => ReportToInvestment, (item) => item.report)\n  reportToInvestments: ReportToInvestment[];\n\n  @OneToMany(() => ReportToCountry, (item) => item.report)\n  reportToCountries: ReportToCountry[];\n}\n\n@Entity()\nexport class Investment {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @OneToMany(() => ReportToInvestment, (item) => item.report)\n  public investmentToReport!: ReportToInvestment[];\n}\n\n@Entity()\nexport class Country {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @OneToMany(() => ReportToCountry, (item) => item.report)\n  public countryToReport!: ReportToCountry[];\n}\n\n@Entity()\nexport class ReportToInvestment {\n  @PrimaryGeneratedColumn()\n  public reportToInvestmentId!: number;\n\n  @Column()\n  public reportId!: number;\n\n  @Column()\n  public investmentId!: number;\n\n  @Column()\n  public value!: number;\n\n  @ManyToOne(() => Report, (report) => report.reportToInvestments)\n  public report!: Report;\n\n  @ManyToOne(() => Investment, (investment) => investment.investmentToReport)\n  public investment!: Investment;\n}\n\n@Entity()\nexport class ReportToCountry {\n  @PrimaryGeneratedColumn()\n  public reportToCountryId!: number;\n\n  @Column()\n  public reportId!: number;\n\n  @Column()\n  public countryId!: number;\n\n  @Column()\n  public value!: number;\n\n  @ManyToOne(() => Report, (report) => report.reportToCountries)\n  public report!: Report;\n\n  @ManyToOne(() => Country, (country) => country.countryToReport)\n  public country!: Country;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectsController.html":{"url":"controllers/ProjectsController.html","title":"controller - ProjectsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProjectsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/projects/projects.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                projects\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProjectDto: CreateProjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/projects/projects.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProjectDto\n                                    \n                                                CreateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/projects/projects.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/projects/projects.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/projects/projects.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateProjectDto: UpdateProjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/projects/projects.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProjectDto\n                                    \n                                                UpdateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { ProjectsService } from './projects.service';\nimport { CreateProjectDto } from './dto/create-project.dto';\nimport { UpdateProjectDto } from './dto/update-project.dto';\n\n@Controller('projects')\nexport class ProjectsController {\n  constructor(private readonly projectsService: ProjectsService) {}\n\n  @Post()\n  create(@Body() createProjectDto: CreateProjectDto) {\n    return this.projectsService.create(createProjectDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.projectsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.projectsService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateProjectDto: UpdateProjectDto) {\n    return this.projectsService.update(+id, updateProjectDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.projectsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectsModule.html":{"url":"modules/ProjectsModule.html","title":"module - ProjectsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProjectsModule\n\n\n\ncluster_ProjectsModule_providers\n\n\n\n\nProjectsService\n\nProjectsService\n\n\n\nProjectsModule\n\nProjectsModule\n\nProjectsModule -->\n\nProjectsService->ProjectsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/projects/projects.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { ProjectsService } from './projects.service';\nimport { ProjectsController } from './projects.controller';\nimport { Project } from 'src/_shared/entities';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Project])],\n  controllers: [ProjectsController],\n  providers: [ProjectsService],\n})\nexport class ProjectsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectsService.html":{"url":"injectables/ProjectsService.html","title":"injectable - ProjectsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/projects/projects.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/projects/projects.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProjectDto: CreateProjectDto)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/projects.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProjectDto\n                                    \n                                                CreateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/projects/projects.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/projects.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/projects.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateProjectDto: UpdateProjectDto)\n                \n            \n\n\n            \n                \n                    Defined in src/projects/projects.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProjectDto\n                                    \n                                                UpdateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Project } from 'src/_shared/entities';\nimport { Repository } from 'typeorm';\nimport { CreateProjectDto } from './dto/create-project.dto';\nimport { UpdateProjectDto } from './dto/update-project.dto';\n\n@Injectable()\nexport class ProjectsService {\n  constructor(\n    @InjectRepository(Project)\n    private projectsRepository: Repository,\n  ) {}\n\n  create(createProjectDto: CreateProjectDto) {\n    return 'This action adds a new project';\n  }\n\n  async findAll(): Promise {\n    return await this.projectsRepository.find();\n  }\n\n  async findOne(id: number): Promise {\n    return await this.projectsRepository.findOne({\n      where: { id },\n      relations: { tags: true },\n    });\n  }\n\n  update(id: number, updateProjectDto: UpdateProjectDto) {\n    return `This action updates a #${id} project`;\n  }\n\n  async remove(id: number): Promise {\n    await this.projectsRepository.delete(id);\n  }\n}\n\n// const projects: Project[] = [\n//   {\n//     id: 1,\n//     name: 'Your news in Thailand',\n//     scope: 'Thailand',\n//     desc: 'In Thailand, we are supporting rubber farmers to transform their monocultures into sustainable agroforestry rubber farms.',\n//     imageUrl:\n//       'https://blog.ecosia.org/content/images/size/w1200/2021/08/Thailand_header.png',\n//     tags: [1, 2, 3],\n//   },\n//   {\n//     id: 2,\n//     name: 'Your trees in the Philippines',\n//     scope: 'Tree planting',\n//     desc: 'In the Philippines, we are planting native seedlings to restore the land, and creating agroforestry systems with smallholder farmers.',\n//     imageUrl:\n//       'https://blog.ecosia.org/content/images/size/w1200/2021/04/Philipinen-header_En.png',\n//     tags: [],\n//   },\n//   {\n//     id: 3,\n//     name: 'Your trees in Cameroon',\n//     scope: 'Tree planting',\n//     desc: 'Your trees restore biodiversity all the while promoting better livelihoods for local communities.',\n//     imageUrl:\n//       'https://blog.ecosia.org/content/images/size/w1200/2021/02/Cameroon.jpg',\n//     tags: [3, 4],\n//   },\n//   {\n//     id: 1,\n//     name: 'Your trees in Nigeria',\n//     scope: 'Tree planting',\n//     desc: 'Your trees in Nigeria are providing opportunities for inclusive rural development.',\n//     imageUrl:\n//       'https://blog.ecosia.org/content/images/size/w1200/2021/04/Nigeria-header_En.png',\n//     tags: [],\n//   },\n// ];\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Report.html":{"url":"entities/Report.html","title":"entity - Report","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Report\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_shared/entities.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                month\n                            \n                            \n                                reportToCountries\n                            \n                            \n                                reportToInvestments\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        month\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reportToCountries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReportToCountry[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, item => item.report)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reportToInvestments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ReportToInvestment[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, item => item.report)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:59\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  ManyToMany,\n  JoinTable,\n  OneToMany,\n  ManyToOne,\n} from 'typeorm';\n\n@Entity()\nexport class Project {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  scope: string;\n\n  @Column()\n  desc: string;\n\n  @Column()\n  imageUrl: string;\n\n  @ManyToMany(() => Tag, (tag) => tag.projects)\n  tags: Tag[];\n}\n\n@Entity()\nexport class Tag {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  title: string;\n\n  @Column()\n  subtitle: string;\n\n  @ManyToMany(() => Project, (project) => project.tags, {\n    cascade: true,\n  })\n  @JoinTable()\n  projects: Project[];\n}\n\n@Entity()\nexport class Report {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  month: string;\n\n  @OneToMany(() => ReportToInvestment, (item) => item.report)\n  reportToInvestments: ReportToInvestment[];\n\n  @OneToMany(() => ReportToCountry, (item) => item.report)\n  reportToCountries: ReportToCountry[];\n}\n\n@Entity()\nexport class Investment {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @OneToMany(() => ReportToInvestment, (item) => item.report)\n  public investmentToReport!: ReportToInvestment[];\n}\n\n@Entity()\nexport class Country {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @OneToMany(() => ReportToCountry, (item) => item.report)\n  public countryToReport!: ReportToCountry[];\n}\n\n@Entity()\nexport class ReportToInvestment {\n  @PrimaryGeneratedColumn()\n  public reportToInvestmentId!: number;\n\n  @Column()\n  public reportId!: number;\n\n  @Column()\n  public investmentId!: number;\n\n  @Column()\n  public value!: number;\n\n  @ManyToOne(() => Report, (report) => report.reportToInvestments)\n  public report!: Report;\n\n  @ManyToOne(() => Investment, (investment) => investment.investmentToReport)\n  public investment!: Investment;\n}\n\n@Entity()\nexport class ReportToCountry {\n  @PrimaryGeneratedColumn()\n  public reportToCountryId!: number;\n\n  @Column()\n  public reportId!: number;\n\n  @Column()\n  public countryId!: number;\n\n  @Column()\n  public value!: number;\n\n  @ManyToOne(() => Report, (report) => report.reportToCountries)\n  public report!: Report;\n\n  @ManyToOne(() => Country, (country) => country.countryToReport)\n  public country!: Country;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReportDto.html":{"url":"classes/ReportDto.html","title":"class - ReportDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReportDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reports/dto/report-dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countries\n                            \n                            \n                                investments\n                            \n                            \n                                month\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(month: string, investments: KeyValuePair[], countries: KeyValuePair[])\n                    \n                \n                        \n                            \n                                Defined in src/reports/dto/report-dto.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        month\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        investments\n                                                  \n                                                        \n                                                                        KeyValuePair[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        countries\n                                                  \n                                                        \n                                                                        KeyValuePair[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        countries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         KeyValuePair[]\n\n                    \n                \n                    \n                        \n                                Defined in src/reports/dto/report-dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        investments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         KeyValuePair[]\n\n                    \n                \n                    \n                        \n                                Defined in src/reports/dto/report-dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        month\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/reports/dto/report-dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ReportDto {\n  month!: string;\n  investments!: KeyValuePair[];\n  countries!: KeyValuePair[];\n\n  constructor(\n    month: string,\n    investments: KeyValuePair[],\n    countries: KeyValuePair[],\n  ) {\n    this.month = month;\n    this.investments = investments;\n    this.countries = countries;\n  }\n}\n\nexport class KeyValuePair {\n  name!: string;\n  value!: number;\n\n  constructor(name: string, value: number) {\n    this.name = name;\n    this.value = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ReportToCountry.html":{"url":"entities/ReportToCountry.html","title":"entity - ReportToCountry","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ReportToCountry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_shared/entities.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                countryId\n                            \n                            \n                                    Public\n                                report\n                            \n                            \n                                    Public\n                                reportId\n                            \n                            \n                                    Public\n                                reportToCountryId\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Country\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, country => country.countryToReport)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        countryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        report\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Report\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, report => report.reportToCountries)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reportId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reportToCountryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:122\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  ManyToMany,\n  JoinTable,\n  OneToMany,\n  ManyToOne,\n} from 'typeorm';\n\n@Entity()\nexport class Project {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  scope: string;\n\n  @Column()\n  desc: string;\n\n  @Column()\n  imageUrl: string;\n\n  @ManyToMany(() => Tag, (tag) => tag.projects)\n  tags: Tag[];\n}\n\n@Entity()\nexport class Tag {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  title: string;\n\n  @Column()\n  subtitle: string;\n\n  @ManyToMany(() => Project, (project) => project.tags, {\n    cascade: true,\n  })\n  @JoinTable()\n  projects: Project[];\n}\n\n@Entity()\nexport class Report {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  month: string;\n\n  @OneToMany(() => ReportToInvestment, (item) => item.report)\n  reportToInvestments: ReportToInvestment[];\n\n  @OneToMany(() => ReportToCountry, (item) => item.report)\n  reportToCountries: ReportToCountry[];\n}\n\n@Entity()\nexport class Investment {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @OneToMany(() => ReportToInvestment, (item) => item.report)\n  public investmentToReport!: ReportToInvestment[];\n}\n\n@Entity()\nexport class Country {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @OneToMany(() => ReportToCountry, (item) => item.report)\n  public countryToReport!: ReportToCountry[];\n}\n\n@Entity()\nexport class ReportToInvestment {\n  @PrimaryGeneratedColumn()\n  public reportToInvestmentId!: number;\n\n  @Column()\n  public reportId!: number;\n\n  @Column()\n  public investmentId!: number;\n\n  @Column()\n  public value!: number;\n\n  @ManyToOne(() => Report, (report) => report.reportToInvestments)\n  public report!: Report;\n\n  @ManyToOne(() => Investment, (investment) => investment.investmentToReport)\n  public investment!: Investment;\n}\n\n@Entity()\nexport class ReportToCountry {\n  @PrimaryGeneratedColumn()\n  public reportToCountryId!: number;\n\n  @Column()\n  public reportId!: number;\n\n  @Column()\n  public countryId!: number;\n\n  @Column()\n  public value!: number;\n\n  @ManyToOne(() => Report, (report) => report.reportToCountries)\n  public report!: Report;\n\n  @ManyToOne(() => Country, (country) => country.countryToReport)\n  public country!: Country;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ReportToInvestment.html":{"url":"entities/ReportToInvestment.html","title":"entity - ReportToInvestment","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ReportToInvestment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_shared/entities.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                investment\n                            \n                            \n                                    Public\n                                investmentId\n                            \n                            \n                                    Public\n                                report\n                            \n                            \n                                    Public\n                                reportId\n                            \n                            \n                                    Public\n                                reportToInvestmentId\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        investment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Investment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, investment => investment.investmentToReport)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        investmentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        report\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Report\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, report => report.reportToInvestments)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reportId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reportToInvestmentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:101\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  ManyToMany,\n  JoinTable,\n  OneToMany,\n  ManyToOne,\n} from 'typeorm';\n\n@Entity()\nexport class Project {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  scope: string;\n\n  @Column()\n  desc: string;\n\n  @Column()\n  imageUrl: string;\n\n  @ManyToMany(() => Tag, (tag) => tag.projects)\n  tags: Tag[];\n}\n\n@Entity()\nexport class Tag {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  title: string;\n\n  @Column()\n  subtitle: string;\n\n  @ManyToMany(() => Project, (project) => project.tags, {\n    cascade: true,\n  })\n  @JoinTable()\n  projects: Project[];\n}\n\n@Entity()\nexport class Report {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  month: string;\n\n  @OneToMany(() => ReportToInvestment, (item) => item.report)\n  reportToInvestments: ReportToInvestment[];\n\n  @OneToMany(() => ReportToCountry, (item) => item.report)\n  reportToCountries: ReportToCountry[];\n}\n\n@Entity()\nexport class Investment {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @OneToMany(() => ReportToInvestment, (item) => item.report)\n  public investmentToReport!: ReportToInvestment[];\n}\n\n@Entity()\nexport class Country {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @OneToMany(() => ReportToCountry, (item) => item.report)\n  public countryToReport!: ReportToCountry[];\n}\n\n@Entity()\nexport class ReportToInvestment {\n  @PrimaryGeneratedColumn()\n  public reportToInvestmentId!: number;\n\n  @Column()\n  public reportId!: number;\n\n  @Column()\n  public investmentId!: number;\n\n  @Column()\n  public value!: number;\n\n  @ManyToOne(() => Report, (report) => report.reportToInvestments)\n  public report!: Report;\n\n  @ManyToOne(() => Investment, (investment) => investment.investmentToReport)\n  public investment!: Investment;\n}\n\n@Entity()\nexport class ReportToCountry {\n  @PrimaryGeneratedColumn()\n  public reportToCountryId!: number;\n\n  @Column()\n  public reportId!: number;\n\n  @Column()\n  public countryId!: number;\n\n  @Column()\n  public value!: number;\n\n  @ManyToOne(() => Report, (report) => report.reportToCountries)\n  public report!: Report;\n\n  @ManyToOne(() => Country, (country) => country.countryToReport)\n  public country!: Country;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ReportsController.html":{"url":"controllers/ReportsController.html","title":"controller - ReportsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ReportsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reports/reports.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                reports\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createReportDto: CreateReportDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/reports/reports.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createReportDto\n                                    \n                                                CreateReportDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/reports/reports.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/reports/reports.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/reports/reports.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateReportDto: UpdateReportDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/reports/reports.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateReportDto\n                                    \n                                                UpdateReportDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { ReportsService } from './reports.service';\nimport { CreateReportDto } from './dto/create-report.dto';\nimport { UpdateReportDto } from './dto/update-report.dto';\n\n@Controller('reports')\nexport class ReportsController {\n  constructor(private readonly reportsService: ReportsService) {}\n\n  @Post()\n  create(@Body() createReportDto: CreateReportDto) {\n    return this.reportsService.create(createReportDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.reportsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.reportsService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateReportDto: UpdateReportDto) {\n    return this.reportsService.update(+id, updateReportDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.reportsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReportsModule.html":{"url":"modules/ReportsModule.html","title":"module - ReportsModule","body":"\n                   \n\n\n\n\n    Modules\n    ReportsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ReportsModule\n\n\n\ncluster_ReportsModule_providers\n\n\n\n\nReportsService\n\nReportsService\n\n\n\nReportsModule\n\nReportsModule\n\nReportsModule -->\n\nReportsService->ReportsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/reports/reports.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ReportsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ReportsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ReportsService } from './reports.service';\nimport { ReportsController } from './reports.controller';\nimport { Country, Investment, Report } from 'src/_shared/entities';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Report]),\n    TypeOrmModule.forFeature([Country]),\n    TypeOrmModule.forFeature([Investment]),\n  ],\n  controllers: [ReportsController],\n  providers: [ReportsService],\n})\nexport class ReportsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReportsService.html":{"url":"injectables/ReportsService.html","title":"injectable - ReportsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReportsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reports/reports.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reportsRepository: Repository, countriesRepository: Repository, investmentsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/reports/reports.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reportsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        countriesRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        investmentsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createReportDto: CreateReportDto)\n                \n            \n\n\n            \n                \n                    Defined in src/reports/reports.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createReportDto\n                                    \n                                                CreateReportDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/reports/reports.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/reports/reports.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/reports/reports.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateReportDto: UpdateReportDto)\n                \n            \n\n\n            \n                \n                    Defined in src/reports/reports.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateReportDto\n                                    \n                                                UpdateReportDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Country, Investment, Report } from 'src/_shared/entities';\nimport { Repository } from 'typeorm';\nimport { CreateReportDto } from './dto/create-report.dto';\nimport { KeyValuePair, ReportDto } from './dto/report-dto';\nimport { UpdateReportDto } from './dto/update-report.dto';\n\n@Injectable()\nexport class ReportsService {\n  constructor(\n    @InjectRepository(Report)\n    private reportsRepository: Repository,\n    @InjectRepository(Country)\n    private countriesRepository: Repository,\n    @InjectRepository(Investment)\n    private investmentsRepository: Repository,\n  ) {}\n\n  create(createReportDto: CreateReportDto) {\n    return 'This action adds a new report';\n  }\n\n  async findAll(): Promise {\n    var reports = await this.reportsRepository.find({\n      relations: {\n        reportToCountries: true,\n        reportToInvestments: true,\n      },\n    });\n\n    var allCountries = await this.countriesRepository.find();\n    var allInvestments = await this.investmentsRepository.find();\n\n    return reports.map((report) => {\n      var investments: KeyValuePair[] = [];\n      report.reportToInvestments.forEach((r) => {\n        var name = allInvestments.find((i) => i.id === r.investmentId)?.name;\n        investments.push(new KeyValuePair(name, r.value));\n      });\n\n      var countries: KeyValuePair[] = [];\n      report.reportToCountries.forEach((r) => {\n        var name = allCountries.find((c) => c.id === r.countryId)?.name;\n        countries.push(new KeyValuePair(name, r.value));\n      });\n\n      return new ReportDto(report.month, investments, countries);\n    });\n  }\n\n  async findOne(id: number): Promise {\n    return await this.reportsRepository.findOne({\n      where: { id },\n    });\n  }\n\n  update(id: number, updateReportDto: UpdateReportDto) {\n    return `This action updates a #${id} report`;\n  }\n\n  async remove(id: number): Promise {\n    await this.reportsRepository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Tag.html":{"url":"entities/Tag.html","title":"entity - Tag","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/_shared/entities.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                projects\n                            \n                            \n                                subtitle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, project => project.tags, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subtitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/_shared/entities.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Entity,\n  Column,\n  PrimaryGeneratedColumn,\n  ManyToMany,\n  JoinTable,\n  OneToMany,\n  ManyToOne,\n} from 'typeorm';\n\n@Entity()\nexport class Project {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  scope: string;\n\n  @Column()\n  desc: string;\n\n  @Column()\n  imageUrl: string;\n\n  @ManyToMany(() => Tag, (tag) => tag.projects)\n  tags: Tag[];\n}\n\n@Entity()\nexport class Tag {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  title: string;\n\n  @Column()\n  subtitle: string;\n\n  @ManyToMany(() => Project, (project) => project.tags, {\n    cascade: true,\n  })\n  @JoinTable()\n  projects: Project[];\n}\n\n@Entity()\nexport class Report {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  month: string;\n\n  @OneToMany(() => ReportToInvestment, (item) => item.report)\n  reportToInvestments: ReportToInvestment[];\n\n  @OneToMany(() => ReportToCountry, (item) => item.report)\n  reportToCountries: ReportToCountry[];\n}\n\n@Entity()\nexport class Investment {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @OneToMany(() => ReportToInvestment, (item) => item.report)\n  public investmentToReport!: ReportToInvestment[];\n}\n\n@Entity()\nexport class Country {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  name: string;\n\n  @OneToMany(() => ReportToCountry, (item) => item.report)\n  public countryToReport!: ReportToCountry[];\n}\n\n@Entity()\nexport class ReportToInvestment {\n  @PrimaryGeneratedColumn()\n  public reportToInvestmentId!: number;\n\n  @Column()\n  public reportId!: number;\n\n  @Column()\n  public investmentId!: number;\n\n  @Column()\n  public value!: number;\n\n  @ManyToOne(() => Report, (report) => report.reportToInvestments)\n  public report!: Report;\n\n  @ManyToOne(() => Investment, (investment) => investment.investmentToReport)\n  public investment!: Investment;\n}\n\n@Entity()\nexport class ReportToCountry {\n  @PrimaryGeneratedColumn()\n  public reportToCountryId!: number;\n\n  @Column()\n  public reportId!: number;\n\n  @Column()\n  public countryId!: number;\n\n  @Column()\n  public value!: number;\n\n  @ManyToOne(() => Report, (report) => report.reportToCountries)\n  public report!: Report;\n\n  @ManyToOne(() => Country, (country) => country.countryToReport)\n  public country!: Country;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TagsController.html":{"url":"controllers/TagsController.html","title":"controller - TagsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TagsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tags\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createTagDto: CreateTagDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTagDto\n                                    \n                                                CreateTagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateTagDto: UpdateTagDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/tags/tags.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTagDto\n                                    \n                                                UpdateTagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { TagsService } from './tags.service';\nimport { CreateTagDto } from './dto/create-tag.dto';\nimport { UpdateTagDto } from './dto/update-tag.dto';\n\n@Controller('tags')\nexport class TagsController {\n  constructor(private readonly tagsService: TagsService) {}\n\n  @Post()\n  create(@Body() createTagDto: CreateTagDto) {\n    return this.tagsService.create(createTagDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.tagsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.tagsService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateTagDto: UpdateTagDto) {\n    return this.tagsService.update(+id, updateTagDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.tagsService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagsModule.html":{"url":"modules/TagsModule.html","title":"module - TagsModule","body":"\n                   \n\n\n\n\n    Modules\n    TagsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_providers\n\n\n\n\nTagsService\n\nTagsService\n\n\n\nTagsModule\n\nTagsModule\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tags/tags.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TagsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TagsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { TagsService } from './tags.service';\nimport { TagsController } from './tags.controller';\nimport { Tag } from 'src/_shared/entities';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Tag])],\n  controllers: [TagsController],\n  providers: [TagsService],\n})\nexport class TagsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagsService.html":{"url":"injectables/TagsService.html","title":"injectable - TagsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TagsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/tags.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                tags\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tagsRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/tags/tags.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createTagDto: CreateTagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTagDto\n                                    \n                                                CreateTagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateTagDto: UpdateTagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/tags/tags.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTagDto\n                                    \n                                                UpdateTagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Tag[]\n\n                    \n                \n                    \n                        \n                                Defined in src/tags/tags.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Tag } from 'src/_shared/entities';\nimport { Repository } from 'typeorm';\nimport { CreateTagDto } from './dto/create-tag.dto';\nimport { UpdateTagDto } from './dto/update-tag.dto';\n\n@Injectable()\nexport class TagsService {\n  readonly tags: Tag[];\n\n  constructor(\n    @InjectRepository(Tag)\n    private tagsRepository: Repository,\n  ) {}\n\n  create(createTagDto: CreateTagDto) {\n    return 'This action adds a new tag';\n  }\n\n  async findAll(): Promise {\n    return await this.tagsRepository.find();\n  }\n\n  async findOne(id: number): Promise {\n    return await this.tagsRepository.findOneBy({ id });\n  }\n\n  update(id: number, updateTagDto: UpdateTagDto) {\n    return `This action updates a #${id} tag`;\n  }\n\n  async remove(id: number): Promise {\n    await this.tagsRepository.delete(id);\n  }\n}\n\n// const tags: Tag[] = [\n//   {\n//     id: 1,\n//     title: 'Partners',\n//     subtitle: 'Prince of Songkhla University/Einhorn',\n//   },\n//   { id: 2, title: 'Wildlife protected', subtitle: 'updating' },\n//   {\n//     id: 3,\n//     title: 'Challenges',\n//     subtitle: 'global demand for rubber at competetitive prices',\n//   },\n//   {\n//     id: 4,\n//     title: 'Wildlife protected',\n//     subtitle:\n//       'Coopers Mountain Squirrel, Bannerman’s Turaco, Bamenda Pririt, Cross River gorillas, Nigeria-Cameroon chimpanzees',\n//   },\n//   {\n//     id: 5,\n//     title: 'Main threats',\n//     subtitle:\n//       'Poaching, deforestation, bush fires, poor farming practices, urbanization',\n//   },\n// ];\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateHealthDto.html":{"url":"classes/UpdateHealthDto.html","title":"class - UpdateHealthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateHealthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/dto/update-health.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateHealthDto } from './create-health.dto';\n\nexport class UpdateHealthDto extends PartialType(CreateHealthDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProjectDto.html":{"url":"classes/UpdateProjectDto.html","title":"class - UpdateProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/projects/dto/update-project.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProjectDto } from './create-project.dto';\n\nexport class UpdateProjectDto extends PartialType(CreateProjectDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateReportDto.html":{"url":"classes/UpdateReportDto.html","title":"class - UpdateReportDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateReportDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/reports/dto/update-report.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateReportDto } from './create-report.dto';\n\nexport class UpdateReportDto extends PartialType(CreateReportDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTagDto.html":{"url":"classes/UpdateTagDto.html","title":"class - UpdateTagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tags/dto/update-tag.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTagDto } from './create-tag.dto';\n\nexport class UpdateTagDto extends PartialType(CreateTagDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/_shared/entities.ts\n            \n            entity\n            Country\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_shared/entities.ts\n            \n            entity\n            Investment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_shared/entities.ts\n            \n            entity\n            Project\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_shared/entities.ts\n            \n            entity\n            Report\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_shared/entities.ts\n            \n            entity\n            ReportToCountry\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_shared/entities.ts\n            \n            entity\n            ReportToInvestment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/_shared/entities.ts\n            \n            entity\n            Tag\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            function\n            getConnection\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/health/dto/create-health.dto.ts\n            \n            class\n            CreateHealthDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/dto/update-health.dto.ts\n            \n            class\n            UpdateHealthDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/entities/health.entity.ts\n            \n            class\n            Health\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/health/health.service.ts\n            \n            injectable\n            HealthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/projects/dto/create-project.dto.ts\n            \n            class\n            CreateProjectDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/projects/dto/update-project.dto.ts\n            \n            class\n            UpdateProjectDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/projects/projects.controller.ts\n            \n            controller\n            ProjectsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/projects/projects.service.ts\n            \n            injectable\n            ProjectsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/reports/dto/create-report.dto.ts\n            \n            class\n            CreateReportDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/reports/dto/report-dto.ts\n            \n            class\n            KeyValuePair\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/reports/dto/report-dto.ts\n            \n            class\n            ReportDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/reports/dto/update-report.dto.ts\n            \n            class\n            UpdateReportDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/reports/entities/report.entity.ts\n            \n            class\n            Report\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/reports/reports.controller.ts\n            \n            controller\n            ReportsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/reports/reports.service.ts\n            \n            injectable\n            ReportsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/tags/dto/create-tag.dto.ts\n            \n            class\n            CreateTagDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tags/dto/update-tag.dto.ts\n            \n            class\n            UpdateTagDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tags/tags.controller.ts\n            \n            controller\n            TagsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tags/tags.service.ts\n            \n            injectable\n            TagsService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @nestjs/terminus : ^8.0.8\n        \n            @nestjs/throttler : ^2.0.1\n        \n            @nestjs/typeorm : ^8.1.2\n        \n            cache-manager : ^4.0.1\n        \n            compression : ^1.7.4\n        \n            helmet : ^5.1.0\n        \n            mysql2 : ^2.3.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n        \n            typeorm : ^0.3.6\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getConnection   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getConnection\n                        \n                    \n                \n            \n            \n                \ngetConnection()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReportsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_HealthModule\n\n\n\ncluster_HealthModule_providers\n\n\n\ncluster_ProjectsModule\n\n\n\ncluster_ProjectsModule_providers\n\n\n\ncluster_ReportsModule\n\n\n\ncluster_ReportsModule_providers\n\n\n\ncluster_TagsModule\n\n\n\ncluster_TagsModule_providers\n\n\n\n\nHealthModule\n\nHealthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nProjectsModule\n\nProjectsModule\n\nAppModule -->\n\nProjectsModule->AppModule\n\n\n\n\n\nReportsModule\n\nReportsModule\n\nAppModule -->\n\nReportsModule->AppModule\n\n\n\n\n\nTagsModule\n\nTagsModule\n\nAppModule -->\n\nTagsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nHealthService\n\nHealthService\n\nHealthModule -->\n\nHealthService->HealthModule\n\n\n\n\n\nProjectsService\n\nProjectsService\n\nProjectsModule -->\n\nProjectsService->ProjectsModule\n\n\n\n\n\nReportsService\n\nReportsService\n\nReportsModule -->\n\nReportsService->ReportsModule\n\n\n\n\n\nTagsService\n\nTagsService\n\nTagsModule -->\n\nTagsService->TagsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
